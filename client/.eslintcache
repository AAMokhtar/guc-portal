[{"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/index.js":"1","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/reportWebVitals.js":"2","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/sidebar/sidebar.js":"3","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/login/authenticationService.js":"4","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/cc/slotRequests.js":"5","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/HOD/Staff.js":"6","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/cc/slot.js":"7","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/academic/schedule.js":"8","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/login/login.js":"9","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/home/home.js":"10","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/navbar/navbar.js":"11","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/CI/CIStaff.js":"12","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/academic/repReq.js":"13","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/academic/sendRep.js":"14","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/editProfile.jsx":"15","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/Attendance.jsx":"16","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/locations.jsx":"17","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateLocation.jsx":"18","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addLocation.jsx":"19","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addFaculty.jsx":"20","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateFaculty.jsx":"21","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/faculties.jsx":"22","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addDepartment.jsx":"23","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateDepartment.jsx":"24","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addCourse.jsx":"25","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/courses.jsx":"26","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateCourse.jsx":"27","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateStaff.jsx":"28","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateSalary.jsx":"29","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaff.jsx":"30","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/newStaff.jsx":"31","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaffAttendance.jsx":"32","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addSignInOut.jsx":"33","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaffMissing.jsx":"34","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewProfile.jsx":"35","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/schedule.jsx":"36","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaffRequests.jsx":"37","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/departments.jsx":"38","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/util/parseSchedule.js":"39","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/locations/locationsService.js":"40","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/staffManagement/staffService.js":"41","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaffProfiles.jsx":"42","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/cards/cards.jsx":"43","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/footer/footer.jsx":"44","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/departments/departmentService.js":"45","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/courses/courseService.js":"46","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/faculties/facultyService.js":"47"},{"size":7297,"mtime":1610747569798,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":1610670964494,"results":"50","hashOfConfig":"49"},{"size":1898,"mtime":1610747565423,"results":"51","hashOfConfig":"49"},{"size":1109,"mtime":1610747569797,"results":"52","hashOfConfig":"49"},{"size":6697,"mtime":1610747569796,"results":"53","hashOfConfig":"49"},{"size":11591,"mtime":1610747569793,"results":"54","hashOfConfig":"49"},{"size":26587,"mtime":1610747569795,"results":"55","hashOfConfig":"49"},{"size":16267,"mtime":1610747569794,"results":"56","hashOfConfig":"49"},{"size":2829,"mtime":1610747569798,"results":"57","hashOfConfig":"49"},{"size":5721,"mtime":1610856110044,"results":"58","hashOfConfig":"49"},{"size":8923,"mtime":1610856806572,"results":"59","hashOfConfig":"49"},{"size":23645,"mtime":1610747569792,"results":"60","hashOfConfig":"49"},{"size":7652,"mtime":1610747569793,"results":"61","hashOfConfig":"49"},{"size":16340,"mtime":1610747569794,"results":"62","hashOfConfig":"49"},{"size":3169,"mtime":1610747565444,"results":"63","hashOfConfig":"49"},{"size":2246,"mtime":1610747565439,"results":"64","hashOfConfig":"49"},{"size":3078,"mtime":1610747565445,"results":"65","hashOfConfig":"49"},{"size":4383,"mtime":1610747565453,"results":"66","hashOfConfig":"49"},{"size":4029,"mtime":1610747565441,"results":"67","hashOfConfig":"49"},{"size":2012,"mtime":1610747565440,"results":"68","hashOfConfig":"49"},{"size":2476,"mtime":1610747565452,"results":"69","hashOfConfig":"49"},{"size":2768,"mtime":1610747565444,"results":"70","hashOfConfig":"49"},{"size":2542,"mtime":1610747565440,"results":"71","hashOfConfig":"49"},{"size":3435,"mtime":1610747565452,"results":"72","hashOfConfig":"49"},{"size":2504,"mtime":1610747565439,"results":"73","hashOfConfig":"49"},{"size":3599,"mtime":1610747565443,"results":"74","hashOfConfig":"49"},{"size":2952,"mtime":1610747565451,"results":"75","hashOfConfig":"49"},{"size":6929,"mtime":1610747565455,"results":"76","hashOfConfig":"49"},{"size":2741,"mtime":1610747565454,"results":"77","hashOfConfig":"49"},{"size":4336,"mtime":1610747565456,"results":"78","hashOfConfig":"49"},{"size":7210,"mtime":1610747565448,"results":"79","hashOfConfig":"49"},{"size":1925,"mtime":1610857591578,"results":"80","hashOfConfig":"49"},{"size":3180,"mtime":1610747565441,"results":"81","hashOfConfig":"49"},{"size":2584,"mtime":1610858068891,"results":"82","hashOfConfig":"49"},{"size":10931,"mtime":1610856231454,"results":"83","hashOfConfig":"49"},{"size":6289,"mtime":1610747565449,"results":"84","hashOfConfig":"49"},{"size":5941,"mtime":1610747569799,"results":"85","hashOfConfig":"49"},{"size":4851,"mtime":1610747569799,"results":"86","hashOfConfig":"49"},{"size":4332,"mtime":1610747565437,"results":"87","hashOfConfig":"49"},{"size":1470,"mtime":1610747565418,"results":"88","hashOfConfig":"49"},{"size":3232,"mtime":1610747565424,"results":"89","hashOfConfig":"49"},{"size":3792,"mtime":1610747565460,"results":"90","hashOfConfig":"49"},{"size":555,"mtime":1610747565406,"results":"91","hashOfConfig":"49"},{"size":290,"mtime":1610747565414,"results":"92","hashOfConfig":"49"},{"size":1954,"mtime":1610747565411,"results":"93","hashOfConfig":"49"},{"size":1907,"mtime":1610747565410,"results":"94","hashOfConfig":"49"},{"size":1443,"mtime":1610747565413,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"g4xxu9",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"99"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"99"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"99"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"99"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"99"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"99"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"99"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"99"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"99"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"99"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"99"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"99"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"99"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"99"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"99"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"99"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"99"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"99"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"99"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"99"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/index.js",["226","227"],"//TOP LEVEL (ROOT) FILE\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router, Route, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { onTokenExpire } from \"./components/login/authenticationService\";\n\n//import your components\nimport Sidebar from \"./components/sidebar/sidebar\";\nimport Home from \"./components/home/home\";\nimport Nav from \"./components/navbar/navbar\";\nimport Login from \"./components/login/login\";\nimport EditProfile from \"./views/editProfile\";\nimport ViewProfile from \"./views/viewProfile\";\nimport Staff from \"./components/HOD/Staff\";\n\nimport Slot from \"./components/cc/slot\";\nimport Requests from \"./components/cc/slotRequests\";\nimport Replacement from \"./components/academic/repReq\";\nimport Sch from \"./components/academic/schedule\";\nimport SendRep from \"./components/academic/sendRep\";\n\n//styles\nimport \"./page-basics.css\";\nimport Schedule from \"./views/schedule\";\nimport Attendance from \"./views/Attendance\";\nimport ViewStaffRequests from \"./views/viewStaffRequests\";\nimport Locations from \"./views/locations\";\nimport AddLocation from \"./views/addLocation\";\nimport UpdateLocation from \"./views/updateLocation\";\nimport Faculties from \"./views/faculties\";\nimport AddFaculty from \"./views/addFaculty\";\nimport UpdateFaculty from \"./views/updateFaculty\";\nimport Departments from \"./views/departments\";\nimport AddDepartment from \"./views/addDepartment\";\nimport UpdateDepartment from \"./views/updateDepartment\";\nimport Courses from \"./views/courses\";\nimport AddCourse from \"./views/addCourse\";\nimport UpdateCourse from \"./views/updateCourse\";\nimport AddStaff from \"./views/newStaff\";\nimport CIStaff from \"./components/CI/CIStaff\";\nimport ViewStaff from \"./views/viewStaff\";\nimport UpdateStaff from \"./views/updateStaff\";\nimport UpdateSalary from \"./views/updateSalary\";\nimport ViewStaffAttendance from \"./views/viewStaffAttendance\";\nimport AddSignInOut from \"./views/addSignInOut\";\nimport ViewStaffMissing from \"./views/viewStaffMissing\";\n\n//for routing\nconst createHistory = require(\"history\").createBrowserHistory;\nconst browserHistory = createHistory();\n\n//================================:-AXIOS-:====================================\n\n//add token to every request, even login (doesn't hurt).\naxios.defaults.headers.common[\"auth-token\"] = localStorage.getItem(\"token\");\n\n/* //refresh token if when it expires\naxios.interceptors.response.use(\n  (response) => {\n    // Return a successful response back to the calling service\n    return response;\n  },\n  (error) => {\n    // Return any error which is not due to authentication back to the calling service\n    if (error.response.status !== 401) {\n      return new Promise((resolve, reject) => {\n        reject(error);\n      });\n    }\n\n    if (error.config.url === \"http://localhost:4000/general/refresh-token\") {\n      localStorage.removeItem(\"token\");\n      browserHistory.push(\"/\");\n\n      return new Promise((resolve, reject) => {\n        reject(error);\n      });\n    }\n\n    // Try request again with new token\n    return onTokenExpire({ jwt: localStorage.getItem(\"token\") })\n      .then((token) => {\n        // New request with new token\n        const config = error.config;\n        config.headers[\"auth-token\"] = token;\n        localStorage.setItem(\"token\", token);\n\n        return new Promise((resolve, reject) => {\n          axios\n            .request(config)\n            .then((response) => {\n              resolve(response);\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        });\n      })\n      .catch((error) => {\n        Promise.reject(error);\n      });\n  }\n);\n */\n//==============================:-RENDERING-:==================================\nconst wrapper = {\n  className: \"d-flex\",\n  width: \"100%\",\n  \"align-items\": \"stretch\",\n};\n\nReactDOM.render(\n  <React.Fragment>\n    <div {...wrapper}>\n      {localStorage.getItem(\"token\") ? (\n        <>\n          {/*<Nav />*/}\n\n          {/* ADD YOUR ROUTES BELOW */}\n          <Router history={browserHistory}>\n            <Sidebar />\n\n            <div className=\"container-fluid no-padding\">\n              <Nav />\n\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/editProfile\" component={EditProfile}></Route>\n              <Route path=\"/HOD/viewStaff\" component={Staff}></Route>\n              <Route path=\"/CI/viewStaff\" component={CIStaff}></Route>\n              <Route path=\"/viewProfile\" component={ViewProfile}></Route>\n              <Route path=\"/schedule\" component={Schedule}></Route>\n              <Route path=\"/viewAttendance\" component={Attendance}></Route>\n              <Route path=\"/Locations\" component={Locations}></Route>\n              <Route path=\"/addLocation\" component={AddLocation}></Route>\n              <Route path=\"/updateLocation\" component={UpdateLocation}></Route>\n              <Route path=\"/faculties\" component={Faculties}></Route>\n              <Route path=\"/addFaculty\" component={AddFaculty}></Route>\n              <Route path=\"/updateFaculty\" component={UpdateFaculty}></Route>\n              <Route path=\"/departments\" component={Departments}></Route>\n              <Route path=\"/addDepartment\" component={AddDepartment}></Route>\n              <Route\n                path=\"/updateDepartment\"\n                component={UpdateDepartment}\n              ></Route>\n              <Route path=\"/courses\" component={Courses}></Route>\n              <Route path=\"/addCourse\" component={AddCourse}></Route>\n              <Route path=\"/updateCourse\" component={UpdateCourse}></Route>\n              <Route path=\"/newStaff\" component={AddStaff}></Route>\n              <Route path=\"/viewStaff\" component={ViewStaff}></Route>\n              <Route path=\"/updateStaff\" component={UpdateStaff}></Route>\n              <Route path=\"/updateSalary\" component={UpdateSalary}></Route>\n              <Route\n                path=\"/viewStaffAttendance\"\n                component={ViewStaffAttendance}\n              ></Route>\n              <Route path=\"/addSignInOut\" component={AddSignInOut}></Route>\n              <Route\n                path=\"/viewStaffMissing\"\n                component={ViewStaffMissing}\n              ></Route>\n\n              <Route path=\"/course-coordinator/slot\" component={Slot}></Route>\n              <Route path=\"/course-coordinator/slot-linking-requests\" component={Requests}></Route>\n              <Route path=\"/academic/replacement\" component={Replacement}></Route>\n              <Route path=\"/academic/schedule\" component={Sch}></Route>\n              <Route path=\"/academic/send-replacement\" component={SendRep}></Route>\n              \n\n              <Route\n                path=\"/viewStaffRequests\"\n                component={ViewStaffRequests}\n              ></Route>\n            </div>\n          </Router>\n        </>\n      ) : (\n        <Login />\n      )}\n    </div>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// export react-router history\nexport default function getHistory() {\n  return browserHistory;\n}\n",["228","229"],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/reportWebVitals.js",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/sidebar/sidebar.js",["230","231","232","233","234"],"import React from 'react';\nimport './sidebar.css';\nimport {Link} from 'react-router-dom';\n\n\nconst notifDropDown = {\n    href: \"#notificationSubmenu\",\n    className: \"list-group-item dropdown-toggle\",\n    \"data-toggle\" : \"collapse\",\n    \"aria-expanded\" : \"false\",\n    \"aria-controls\": \"academicSubmenu\" \n}\n\nconst editProfile = {\n    to: \"/editProfile\",\n    className: \"list-group-item dropdown-toggle side-header\",\n    \"data-toggle\" : \"collapse\",\n    \"aria-expanded\" : \"false\",\n}\n\n\nfunction SidebarComponent() {\n    return (\n        <div className=\"collapse list-group list-group-flush\" id=\"sidebar\">\n            {/*<a href=\"#\" className=\"list-group-item active\">Home</a>\n            <a {...academicDD}>Academic</a>*/}\n            {/* <Link {...dashboard}>\n                Dashboard\n            </Link> */}\n            \n            <Link {...editProfile}>\n                Edit Profile\n            </Link>\n            <div className=\"collapse\" id=\"academicSubmenu\">\n                <a href=\"#\" className=\"list-group-item\">Schedule</a>\n                <a {...notifDropDown}>Notifications<span className=\"badge rounded-pill bg-info\" style={{marginLeft: \"35%\"}}>9</span></a>\n                <div className=\"collapse list-group-item dropdown\" id=\"notificationSubmenu\" style={{\"padding\":\"0\", \"border\": \"0\"}}>\n                    <a href=\"#\" className=\"list-group-item\">All</a>\n                    <a href=\"#\" className=\"list-group-item d-flex justify-content-between align-items-center\">Accepted<span className=\"badge rounded-pill bg-info\">6</span></a>\n                    <a href=\"#\" className=\"list-group-item d-flex justify-content-between align-items-center\">Rejected<span className=\"badge rounded-pill bg-info\">3</span></a>\n                </div>\n                <a href=\"#\" className=\"list-group-item\">Buy me smarties!</a>\n            </div>\n        </div>\n    )\n}\n\nexport default SidebarComponent;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/login/authenticationService.js",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/cc/slotRequests.js",["235","236"],"import React, { useState, useEffect } from 'react';\n\nvar axios = require(\"axios\");\n\nfunction getRequests()\n{\n    let res = [\n        {objectID: \"438577463\", senderID: \"43247548357\", receiverID: \"4yu453y8543\", status: \"Pending\", comment: \"Ana 3ayez amoot\", linkingSlot: {slot: {weekday: \"Monday\", number: \"Second\", location: \"47587389435\", course: \"3234758295749\", staffID: null}}, sentDate: new Date(2020, 5, 12), responseDate: null},\n        {objectID: \"676458933\", senderID: \"43247548357\", receiverID: \"4yu453y8543\", status: \"Accepted\", comment: \"Ana 3ayez amoot\", linkingSlot: {slot: {weekday: \"Monday\", number: \"Second\", location: \"47587389435\", course: \"3234758295749\", staffID: null}}, sentDate: new Date(2020, 5, 12), responseDate: new Date(2020, 5, 15)},\n        {objectID: \"943789587\", senderID: \"43247548357\", receiverID: \"4yu453y8543\", status: \"Rejected\", comment: \"Ana 3ayez amoot\", linkingSlot: {slot: {weekday: \"Monday\", number: \"Second\", location: \"47587389435\", course: \"3234758295749\", staffID: null}}, sentDate: new Date(2020, 5, 12), responseDate: new Date(2020, 5, 16)}\n    ]\n\n    return res;\n}\n\nfunction filterRequests(requests)\n{\n    const n = requests.length;\n\n    let pending = [];\n    let accepted = [];\n    let rejected = [];\n\n    for(let i=0; i<n; i++)\n    {\n        const req = requests[i];\n\n        if(req.status === \"Pending\")\n            pending.push(req);\n        else if(req.status === \"Accepted\")\n            accepted.push(req);\n        else if(req.status === \"Rejected\")\n            rejected.push(req);\n    }\n\n    const res = {p: pending, a: accepted, r: rejected};\n\n    return res;\n}\n\nfunction PendingItem({req, index, func})\n{\n    const{addAccepted, removePending, addRejected} = func;\n\n    const updateAcc = (req, index) => {\n        removePending(index);\n        addAccepted(req);\n    }\n\n    const updateRej = (req, index) => {\n        removePending(index);\n        addRejected(req);\n    }\n\n    return (\n        <div className=\"card text-white bg-primary mb-3\" key={req.objectID}>\n                <div className=\"card-body\">\n                    <div className=\"d-block mb-3\">\n                        <p className=\"d-inline\">Sender: {req.senderID}</p>\n                        <p className=\"d-inline ms-3\">Course: {req.linkingSlot.slot.course}</p>\n                        <p className=\"d-inline ms-3\">Slot: {req.linkingSlot.slot.weekday} {req.linkingSlot.slot.number}</p>\n                        <p className=\"d-inline ms-3\">Sent: {req.sentDate.toLocaleString('en-GB')}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                        <button className=\"btn btn-success\" onClick={() => updateAcc(req, index) }>Accept</button>\n                        <button className=\"btn btn-danger ms-3\" onClick={() => updateRej(req, index) }>Reject</button>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nfunction Pending(props)\n{\n    const pending = props.pending;\n\n    const func = props.func;\n\n    return ( pending.length===0 ? <p style={{textAlign:\"center\"}}>There are no pending requests</p> :\n        pending.map( (req, i) => \n            <PendingItem req={req} index={i} func={func}/> \n        )\n    );\n}\n\nfunction AcceptedItem({req})\n{\n    return (\n        <div className=\"card text-white bg-primary mb-3\" key={req.objectID}>\n                <div className=\"card-body\">\n                    <div className=\"d-block mb-3\">\n                        <p className=\"d-inline\">Sender: {req.senderID}</p>\n                        <p className=\"d-inline ms-3\">Course: {req.linkingSlot.slot.course}</p>\n                        <p className=\"d-inline ms-3\">Slot: {req.linkingSlot.slot.weekday} {req.linkingSlot.slot.number}</p>\n                        <p className=\"d-inline ms-3\">Sent: {req.sentDate.toLocaleString('en-GB')}</p>\n                        <p className=\"d-inline ms-3\">Response: {req.responseDate.toLocaleString('en-GB')}</p>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nfunction Accepted(props)\n{\n    const accepted = props.accepted;\n\n    return ( accepted.length===0 ? <p style={{textAlign:\"center\"}}>There are no accepted requests</p> :\n        accepted.map( req => \n           <AcceptedItem req={req}/>\n        )\n    )\n}\n\nfunction RejectedItem({req})\n{\n    return (\n        <div className=\"card text-white bg-primary mb-3\" key={req.objectID}>\n                <div className=\"card-body\">\n                    <div className=\"d-block mb-3\">\n                        <p className=\"d-inline\">Sender: {req.senderID}</p>\n                        <p className=\"d-inline ms-3\">Course: {req.linkingSlot.slot.course}</p>\n                        <p className=\"d-inline ms-3\">Slot: {req.linkingSlot.slot.weekday} {req.linkingSlot.slot.number}</p>\n                        <p className=\"d-inline ms-3\">Sent: {req.sentDate.toLocaleString('en-GB')}</p>\n                        <p className=\"d-inline ms-3\">Response: {req.responseDate.toLocaleString('en-GB')}</p>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nfunction Rejected(props)\n{\n    const rejected = props.rejected;\n\n    return ( rejected.length===0 ? <p style={{textAlign:\"center\"}}>There are no rejected requests</p> :\n       rejected.map( req => \n            <RejectedItem req={req}/>\n        )\n    )\n}\n\n\nfunction Requests(props)\n{\n    const requests = getRequests();\n    const [pending, setPending] = useState([]);\n    const [accepted, setAccepted] = useState([]);\n    const [rejected, setRejected] = useState([]);\n\n    //Mount \n    useEffect( () => {\n        const {p, a, r} = filterRequests( requests );\n        setPending(p);\n        setAccepted(a);\n        setRejected(r);\n    }, []);\n\n    //TODO: mongoose\n    const addAccepted = (req) => {\n        req.responseDate = new Date();\n        setAccepted( [...accepted, req] );\n    }\n    const removePending = (i) => {\n        pending.splice(i,1);\n        setPending(pending);\n    }\n    \n    const addRejected = (req) => {\n        req.responseDate = new Date();\n        setRejected( [...rejected, req] );\n    }\n\n    const vals = {\n        addAccepted: addAccepted,\n        removePending: removePending,\n        addRejected: addRejected\n    }\n\n    return (\n        <div className=\"m-5\">\n            <h4 className=\"mb-4\">Slot Linking Request</h4>\n        <div>\n            <h5>Pending</h5>\n            <Pending pending= {pending} func={vals}/>\n        </div>\n\n        <div>\n            <h5>Accepted</h5>\n            <Accepted accepted={accepted}/>\n        </div>\n\n        <div>\n            <h5>Rejected</h5>\n            <Rejected rejected={rejected}/>\n        </div>\n\n        </div>\n    )\n}\n\nexport default Requests;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/HOD/Staff.js",["237","238","239","240","241","242","243","244","245","246","247"],"import React, { Component, createRef, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nimport {\n  Container,\n  Jumbotron,\n  Button,\n  Table,\n  Col,\n  Form,\n  Modal,\n  Tooltip,\n} from \"react-bootstrap\";\nimport Overlay from \"react-bootstrap/Overlay\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport ViewProfiles from \"../../views/viewStaffProfiles\";\nimport Schedule from \"../../views/schedule\";\nimport { parseSchedule } from \"../../util/parseSchedule\";\nlet token = localStorage.getItem(\"token\");\nvar axios = require(\"axios\");\n\nexport class Staff extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleAssign = this.handleAssign.bind(this);\n    this.filterHandler = this.filterHandler.bind(this);\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.state = {\n      staff: [],\n      radio: [],\n      show: false,\n      result: [],\n      schedule: [],\n      assign: null,\n      courseCodeBefore: null,\n      courseCodeAfter: null,\n      delete: null,\n      courseFilter: null,\n      initial: \"Show coverage\",\n      data: [],\n      columns: [\n        {\n          dataField: \"courseCode\",\n          text: \"Course Code\",\n        },\n        {\n          dataField: \"coverage\",\n          text: \"Coverage\",\n        },\n      ],\n      assignments: [],\n    };\n\n    this.Result = createRef();\n  }\n  setValue(event) {\n    this.setState({ assign: event.target.value });\n  }\n  deleteValue(event) {\n    this.setState({ delete: event.target.value });\n    console.log(this.state);\n  }\n  setBeforeCode(event) {\n    this.setState({ courseCodeBefore: event.target.value });\n    //console.log(event.target.value);\n    console.log(this.state);\n  }\n  setAfterCode(event) {\n    this.setState({ courseCodeAfter: event.target.value });\n    console.log(this.state);\n  }\n  async componentWillMount() {\n    var config = {\n      method: \"get\",\n      url:\n        \"http://localhost:4000/hod/viewStaff\" +\n        (this.state.courseFilter\n          ? \"?courseCode=\" + this.state.courseFilter\n          : \"\"),\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var config2 = {\n      method: \"get\",\n      url: \"http://localhost:4000/hod/getCourses\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n\n    var configCoverage = {\n      method: \"get\",\n      url: \"http://localhost:4000/hod/viewCoverage\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n\n    let [Response, result2, coverageResult] = await Promise.all([\n      axios(config),\n      axios(config2),\n      axios(configCoverage),\n    ]);\n\n    let data = coverageResult.data.result;\n    console.log(data);\n    let radio = Array(Response.data.result.length).fill(false);\n    let result = [\n      <option value=\"\" selected disabled>\n        Please select\n      </option>,\n    ];\n    result.push(\n      result2.data.result.map((el) => {\n        return <option value={el}>{el}</option>;\n      })\n    );\n\n    let scheduleResult = [];\n\n    Response.data.result.map((el) => {\n      let schedule = el.schedule;\n      schedule = parseSchedule(schedule);\n\n      let temp = (\n        <Schedule staff={{ schedule, text: \"Schedule: \" + el.staffID }} />\n      );\n      scheduleResult.push(temp);\n    });\n\n    this.setState({\n      staff: Response.data.result,\n      radio,\n      result,\n      assignments: scheduleResult,\n    });\n  }\n  handleDelete() {\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        courseCode: this.state.delete,\n      },\n    });\n\n    var config = {\n      method: \"delete\",\n      url: \"http://localhost:4000/hod/deleteInstructor\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Tyipe\": \"application/json\",\n      },\n      data: data,\n    };\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Course assignment was deleted Successfully\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n  handleAssign() {\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        courseCode: this.state.assign,\n      },\n    });\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:4000/hod/assignInstructor\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Course was assigned to a member Successfully\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n  async filterHandler(courseFilter) {\n    courseFilter = courseFilter ? courseFilter.target.value : courseFilter;\n    console.log(courseFilter);\n    var config = {\n      method: \"get\",\n      url:\n        \"http://localhost:4000/hod/viewStaff\" +\n        (courseFilter ? \"?courseCode=\" + courseFilter : \"\"),\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var config2 = {\n      method: \"get\",\n      url: \"http://localhost:4000/hod/getCourses\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    console.log(config);\n    let [Response, result2] = await Promise.all([\n      axios(config),\n      axios(config2),\n    ]);\n    let radio = Array(Response.data.result.length).fill(false);\n    let result = [\n      <option value=\"\" selected disabled>\n        Please select\n      </option>,\n    ];\n    result.push(\n      result2.data.result.map((el) => {\n        return <option value={el}>{el}</option>;\n      })\n    );\n\n    this.setState({\n      staff: Response.data.result,\n      radio,\n      result,\n    });\n  }\n\n  handleClick() {\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        courseCodeBefore: this.state.courseCodeBefore,\n        courseCodeAfter: this.state.courseCodeAfter,\n      },\n    });\n    console.log(data);\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:4000/hod/updateInstructor\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Course updated Successfully\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        <ToastContainer />\n        <div>Filter (Instructors only ... doesnt include the TAs):</div>\n        <Form.Control\n          value={this.state.courseFilter}\n          onChange={this.filterHandler.bind(this)}\n          type=\"text\"\n          placeholder=\"Enter course code to be able to filter by course\"\n        />\n        <ViewProfiles ref={this.Result} staff={this.state} />{\" \"}\n        <div>\n          Please select a staffID first in order to perform the next\n          functionalities\n        </div>\n        <div class=\"d-flex justify-content-around\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            data-toggle=\"collapse\"\n            href=\"#assign\"\n            aria-controls=\"assign\"\n          >\n            Assign member to a course{\" \"}\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-warning\"\n            onClick={() => {\n              this.setState({ show: this.state.show });\n            }}\n            data-toggle=\"collapse\"\n            href=\"#multiCollapseExample1\"\n            aria-controls=\"multiCollapseExample1\"\n            aria-label=\"Default select example\"\n            role=\"button\"\n            aria-expanded=\"true\"\n          >\n            Update member courses\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            data-toggle=\"collapse\"\n            href=\"#delete\"\n            aria-controls=\"delete\"\n          >\n            Delete member from a course{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"delete\">\n          <label for=\"sel1\">Delete course:</label>\n          <select\n            class=\"form-select\"\n            onChange={this.deleteValue.bind(this)}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.result}\n          </select>\n\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            onClick={this.handleDelete.bind(this)}\n          >\n            Delete Assignment{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"multiCollapseExample1\">\n          <label for=\"sel1\">Update course: The old course</label>\n          <select\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n            onChange={this.setBeforeCode.bind(this)}\n            onfocus=\"this.selectedIndex = -1;\"\n          >\n            {this.state.result}\n          </select>\n\n          <label for=\"sel2\">Update course: The new course</label>\n          <select\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n            onChange={this.setAfterCode.bind(this)}\n            onfocus=\"this.selectedIndex = -1;\"\n          >\n            {this.state.result}\n          </select>\n\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            onClick={this.handleClick}\n          >\n            Submit Update{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"assign\">\n          <label for=\"sel1\">Assign course:</label>\n          <select\n            class=\"form-select\"\n            onChange={this.setValue.bind(this)}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.result}\n          </select>\n\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            onClick={this.handleAssign.bind(this)}\n          >\n            Submit Assignment{\" \"}\n          </button>\n        </div>\n        <br />\n        <br />\n        <hr\n          style={{\n            color: \"black\",\n            backgroundColor: \"black\",\n            height: 5,\n          }}\n        />\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          data-toggle=\"collapse\"\n          href=\"#coverage\"\n          aria-controls=\"coverage\"\n        >\n          Show Coverage{\" \"}\n        </button>\n        <div class=\"collapse multi-collapse\" id=\"coverage\">\n          <p className=\"Table-header\">Coverage</p>\n\n          <BootstrapTable\n            keyField=\"id\"\n            data={this.state.data}\n            columns={this.state.columns}\n          />\n        </div>\n        <br />\n        <br />\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          data-toggle=\"collapse\"\n          href=\"#assignment\"\n          aria-controls=\"assignment\"\n        >\n          Show course Assignments{\" \"}\n        </button>\n        <div class=\"collapse multi-collapse\" id=\"assignment\">\n          <p className=\"Table-header\">Assignments</p>\n          {this.state.assignments}\n        </div>\n      </Container>\n    );\n    //    ));\n  }\n}\n\nexport default Staff;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/cc/slot.js",["248"],"import React, { useState } from 'react';\n\nvar axios = require(\"axios\");\n\nconst WEEKDAYS = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n  ];\n\nconst SLOTNUMS = [\"First\", \"Second\", \"Third\", \"Fourth\", \"Fifth\"];\n\nfunction getSlots()\n{\n    let res = \n    { courseSlots:\n        {\n        sat: {first: [], second: [], third: [], fourth: [], fifth: []},\n        sun: {first: [{objectID: \"909090909\", weekday: \"Sunday\", number: \"First\", location: \"485730959438759483\", course: \"777\", staffID: null}], second: [], third: [], fourth: [], fifth: []},\n        mon: {first: [], second: [], third: [], fourth: [], fifth: [{objectID: \"58947543984537\", weekday: \"Monday\", number: \"Fifth\", location: \"5487489473289473\", course: \"777\", staffID: \"ac-7\"}]},\n        tue: {first: [], second: [], third: [], fourth: [], fifth: []},\n        wed: {first: [], second: [], third: [], fourth: [], fifth: []},\n        thu: {first: [], second: [{objectID: \"435843085749387549\", weekday: \"Thursday\", number: \"Second\", location: \"438547259437\", course: \"777\", staffID: \"ac-1\"}], third: [], fourth: [], fifth: []}\n        },\n      course: \"777\"\n    }\n    return res;\n}\n\nconst overlay = {\n    position: \"fixed\",\n    width: \"100%\",\n    height: \"100%\",\n    left: \"0\",\n    top: \"0\",\n    background: \"rgba(51,51,51,0.7)\",\n    \"z-index\": \"10\"\n}\n\nconst card = {\n    \"max-width\" : \"600px\",\n    \"width\" : \"50%\",\n    \"max-height\" : \"600px\"\n}\n\nfunction UpdateCard({slot, index, func})\n{\n    const [day, setDay] = useState(slot.weekday);\n    const [number, setNumber] = useState(slot.number);\n    const [location, setLocation] = useState(slot.location);\n\n    const {setSelectedSlot, update} = func;\n\n    const onClick = () => setSelectedSlot(false);\n\n    const onChangeDay = (event) => setDay(event.target.value);\n    const onChangeNum = (event) => setNumber(event.target.value);\n    const onChangeLoc = (event) => setLocation(event.target.value);\n\n    const onSubmit = () => \n    {\n        if(day===slot.weekday && number === slot.number && location === slot.location)\n            alert(\"No update to perform as parameters have not changed\");\n        else\n        {\n            update(slot, index, day, number, location);\n            alert(\"Update successful\");\n            setSelectedSlot(false);\n        }\n    }\n\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\" style={overlay}>\n            <div className=\"card text-white bg-primary mb-3 p-3\" style={card}>\n                <div className=\"d-flex justify-content-between\">\n                <h5 className=\"mb-5\" style={{marginTop: \"1%\"}}>Update Slot</h5>\n                <button className=\"btn pt-0\" style={{height:\"1.5rem\"}} onClick={onClick}>X</button>\n                </div>\n                <form className=\"d-flex flex-column\">\n                <label>\n                Weekday:\n                <select className=\"ms-3\" style={{width: \"10rem\"}} onChange={onChangeDay}>\n                    {\n                        WEEKDAYS.map( (day) =>  slot.weekday===day ? <option selected value={day}>{day}</option> : <option value={day}>{day}</option>)\n                    }\n                </select>\n                </label>\n                <label>\n                Number:\n                <select className=\"ms-3 mt-3\" style={{width: \"10rem\"}} onChange={onChangeNum}>\n                    {\n                        SLOTNUMS.map( (num) =>  slot.number===num ? <option selected value={num}>{num}</option> : <option value={num}>{num}</option>)\n                    }\n                </select>\n                </label>\n                <label>\n                Location:\n                <input className=\"ms-3 mt-3\" type=\"text\" onChange={onChangeLoc}/>\n                </label>\n                </form>\n                <div className=\"d-flex justify-content-center\"><button type=\"submit\" className=\"btn btn-warning mt-4\" onClick={onSubmit}>Update</button></div>\n            </div>\n        </div>\n    )\n}\n\nfunction DaySlotItem({slot, index, func})\n{\n    const {setSelectedSlot, setIndex, del} = func;\n\n    const onUpdate = () => {\n\n        setSelectedSlot(slot);\n\n        setIndex(index);\n    }\n\n    const onDel = () =>  {\n        del(slot, index);\n    }\n\n    return (\n        <div className=\"card text-white bg-primary mb-3\" id={slot.objectID} data-toggle=\"collapse\" data-target={'#' + slot.objectID + \"col\"} aria-expanded=\"true\" aria-controls={slot.objectID+\"col\"}>\n                <div className=\"card-body\">\n                    <div className=\"d-flex justify-content-evenly mb-3\">\n                        <p className=\"d-inline\">Weekday: {slot.weekday}</p>\n                        <p className=\"d-inline ms-3\">Number: {slot.number}</p>\n                        <p className=\"d-inline ms-3\">Location: {slot.location}</p>\n                        <p className=\"d-inline ms-3\">Course: {slot.course}</p>\n                        <p className=\"d-inline ms-3\">Staff: {slot.staffID ? slot.staffID : \"none\"}</p>\n                    </div>\n                    <div className=\"collapse\" id={slot.objectID + \"col\"} aria-labelledby={slot.objectID}>\n                        <div className=\"d-flex justify-content-center\">\n                            <button className=\"btn btn-warning\" onClick={onUpdate}>Update</button>\n                            <button className=\"btn btn-danger ms-3\" onClick={onDel}>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nfunction DaySlot({slots, func})\n{\n    return (\n        <div className=\"card text-dark bg-light mb-3\">\n            <div className=\"mt-3 m-3\">\n            <h4>First</h4>\n            {slots.first.length === 0 ? <p style={{textAlign:\"center\"}}>There are no slots</p> : slots.first.map( (slot, index) => <DaySlotItem slot={slot} index={index} func={func}/>)}\n            </div>\n            <div className=\"m-3\">\n            <h4>Second</h4>\n            {slots.second.length === 0 ? <p style={{textAlign:\"center\"}}>There are no slots</p> : slots.second.map( (slot, index) => <DaySlotItem slot={slot} index={index} func={func}/>)}\n            </div>\n            <div className=\"m-3\">\n            <h4>Third</h4>\n            {slots.third.length === 0 ? <p style={{textAlign:\"center\"}}>There are no slots</p> : slots.third.map( (slot, index) => <DaySlotItem slot={slot} index={index} func={func}/>)}\n            </div>\n            <div className=\"m-3\">\n            <h4>Fourth</h4>\n            {slots.fourth.length === 0 ? <p style={{textAlign:\"center\"}}>There are no slots</p> : slots.fourth.map( (slot, index) => <DaySlotItem slot={slot} index={index} func={func}/>)}\n            </div>\n            <div className=\"m-3\">\n            <h4>Fifth</h4>\n            {slots.fifth.length === 0 ? <p style={{textAlign:\"center\"}}>There are no slots</p> : slots.fifth.map( (slot, index) => <DaySlotItem slot={slot} index={index} func={func}/>)}\n            </div>\n        </div>\n    )\n}\n\nfunction AddCard({func})\n{\n    const [day, setDay] = useState(\"Saturday\");\n    const [number, setNumber] = useState(\"First\");\n    const [location, setLocation] = useState();\n\n    const {setAddSlot, addToTable} = func;\n\n    const onClick = () => setAddSlot(false);\n\n    const onChangeDay = (event) => setDay(event.target.value);\n    const onChangeNum = (event) => setNumber(event.target.value);\n    const onChangeLoc = (event) => setLocation(event.target.value);\n\n    const onSubmit = () => \n    {\n        if(!day || !number || !location)\n            alert(\"Please fill all inputs\");\n        else\n        {\n            addToTable(day, number, location);\n            alert(\"Add successful\");\n            setAddSlot(false);\n        }\n\n        \n    }\n\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\" style={overlay}>\n            <div className=\"card text-white bg-primary mb-3 p-3\" style={card}>\n                <div className=\"d-flex justify-content-between\">\n                <h5 className=\"mb-5\" style={{marginTop: \"1%\"}}>Add Slot</h5>\n                <button className=\"btn pt-0\" style={{height:\"1.5rem\"}} onClick={onClick}>X</button>\n                </div>\n                <form className=\"d-flex flex-column\">\n                <label>\n                Weekday:\n                <select className=\"ms-3\" style={{width: \"10rem\"}} onChange={onChangeDay}>\n                    {\n                        WEEKDAYS.map( (day) => <option value={day}>{day}</option>)\n                    }\n                </select>\n                </label>\n                <label>\n                Number:\n                <select className=\"ms-3 mt-3\" style={{width: \"10rem\"}} onChange={onChangeNum}>\n                    {\n                        SLOTNUMS.map( (num) => <option value={num}>{num}</option>)\n                    }\n                </select>\n                </label>\n                <label>\n                Location:\n                <input className=\"ms-3 mt-3\" type=\"text\" onChange={onChangeLoc}/>\n                </label>\n                </form>\n                <div className=\"d-flex justify-content-center\"><button type=\"submit\" className=\"btn btn-success mt-4\" onClick={onSubmit}>Add</button></div>\n            </div>\n        </div>\n    )\n}\n\nfunction Slot()\n{\n    /*\n    const fetchSlots = async () =>{\n        const URL = 'http://localhost:4000/course-coordinator/get-slots';\n        const result = await axios(URL, \n        {\n          method: 'GET',\n          headers: {\n            \"auth-token\": localStorage.getItem(\"token\")\n          },\n        });\n        console.log(\"slots: \" + JSON.stringify(result.data.courseSlots))\n        return {...result.data.courseSlots};\n    }\n    */\n\n    const {courseSlots, course} = getSlots();\n    const [slots, setSlots] = useState(courseSlots);\n    const [selectedSlot, setSelectedSlot] = useState();\n    const [addSlot, setAddSlot] = useState(false);\n    const [index, setIndex] = useState();\n\n    console.log(\"result: \" + slots);\n    \n\n    //TODO: zift mongoose\n    const update = (slot, index, newWeekday, newNum, newLocation) => {\n        \n        del(slot, index);\n\n        slot.weekday = newWeekday;\n        slot.number = newNum;\n        slot.location = newLocation;\n\n        add(slot);\n    }\n\n\n    const addToTable = (weekday, number, location) => {\n\n        let slot = {objectID: \"dhfdjkaskdhsfkdsahjfdsklj\", weekday: weekday, number: number, location: location, course: course._id, staffID: null};\n\n        add(slot);\n    }\n\n    const add = (slot) => {\n        if(slot.weekday === \"Saturday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.sat.first.push(slot);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.sat.second.push(slot);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.sat.third.push(slot);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.sat.fourth.push(slot);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.sat.fifth.push(slot);\n            }\n        }\n        else if(slot.weekday === \"Sunday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.sun.first.push(slot);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.sun.second.push(slot);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.sun.third.push(slot);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.sun.fourth.push(slot);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.sun.fifth.push(slot);\n            }\n        }\n        else if(slot.weekday === \"Monday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.mon.first.push(slot);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.mon.second.push(slot);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.mon.third.push(slot);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.mon.fourth.push(slot);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.mon.fifth.push(slot);\n            }\n        }\n        else if(slot.weekday === \"Tuesday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.tue.first.push(slot);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.tue.second.push(slot);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.tue.third.push(slot);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.tue.fourth.push(slot);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.tue.fifth.push(slot);\n            }\n        }\n        else if(slot.weekday === \"Wednesday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.wed.first.push(slot);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.wed.second.push(slot);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.wed.third.push(slot);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.wed.fourth.push(slot);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.wed.fifth.push(slot);\n            }\n        }\n        else if(slot.weekday === \"Thursday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.thu.first.push(slot);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.thu.second.push(slot);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.thu.third.push(slot);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.thu.fourth.push(slot);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.thu.fifth.push(slot);\n            }\n        }\n\n        setSlots({...slots});\n    }\n\n    const del = (slot, index) => {\n\n        if(slot.weekday === \"Saturday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.sat.first.splice(index,1);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.sat.second.splice(index,1);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.sat.third.splice(index,1);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.sat.fourth.splice(index,1);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.sat.fifth.splice(index,1);\n            }\n        }\n        else if(slot.weekday === \"Sunday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.sun.first.splice(index,1);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.sun.second.splice(index,1);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.sun.third.splice(index,1);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.sun.fourth.splice(index,1);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.sun.fifth.splice(index,1);\n            }\n        }\n        else if(slot.weekday === \"Monday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.mon.first.splice(index,1);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.mon.second.splice(index,1);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.mon.third.splice(index,1);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.mon.fourth.splice(index,1);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.mon.fifth.splice(index,1);\n            }\n        }\n        else if(slot.weekday === \"Tuesday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.tue.first.splice(index,1);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.tue.second.splice(index,1);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.tue.third.splice(index,1);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.tue.fourth.splice(index,1);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.tue.fifth.splice(index,1);\n            }\n        }\n        else if(slot.weekday === \"Wednesday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.wed.first.splice(index,1);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.wed.second.splice(index,1);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.wed.third.splice(index,1);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.wed.fourth.splice(index,1);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.wed.fifth.splice(index,1);\n            }\n        }\n        else if(slot.weekday === \"Thursday\")\n        {\n            if(slot.number === \"First\")\n            {\n                slots.thu.first.splice(index,1);\n            }\n            else if(slot.number === \"Second\")\n            {\n                slots.thu.second.splice(index,1);\n            }\n            else if(slot.number === \"Third\")\n            {\n                slots.thu.third.splice(index,1);\n            }\n            else if(slot.number === \"Fourth\")\n            {\n                slots.thu.fourth.splice(index,1);\n            }\n            else if(slot.number === \"Fifth\")\n            {\n                slots.thu.fifth.splice(index,1);\n            }\n        }\n        \n        setSlots({...slots});\n    }\n\n    const func = {\n        update: update,\n        del: del,\n        addToTable: addToTable,\n        setSelectedSlot : setSelectedSlot,\n        setIndex: setIndex,\n        setAddSlot: setAddSlot\n    }\n\n    const onAdd = () => setAddSlot(true);\n\n    return (\n        <div>\n        <div className=\"d-flex justify-content-center m-5\"><button className=\"btn btn-success\" onClick={onAdd}>Add Slot</button></div>\n        <div className=\"my-5 mx-5\">\n        <table className=\"table table-hover table-responsive-lg\">\n            <thead className=\"table-light\">\n                <tr>\n                <th scope=\"col\">Weekday</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>First</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Second</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Third</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Fourth</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Fifth</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr id=\"sat\" data-toggle=\"collapse\" data-target=\"#satSlots\" aria-expanded=\"true\" aria-controls=\"satSlots\">\n                <th scope=\"row\">Saturday</th>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sat.first.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sat.second.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sat.third.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sat.fourth.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sat.fifth.length}</span></div></td>\n                </tr>\n                <tr id=\"satSlots\" className=\"collapse\" aria-labelledby=\"sat\"><td colSpan=\"6\"><DaySlot slots={slots.sat} func={func}/></td></tr>\n                <tr id=\"sun\" data-toggle=\"collapse\" data-target=\"#sunSlots\" aria-expanded=\"true\" aria-controls=\"sunSlots\">\n                <th scope=\"row\">Sunday</th>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sun.first.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sun.second.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sun.third.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sun.fourth.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.sun.fifth.length}</span></div></td>\n                </tr>\n                <tr id=\"sunSlots\" className=\"collapse\" aria-labelledby=\"sun\"><td colSpan=\"6\"><DaySlot slots={slots.sun} func={func}/></td></tr>\n                <tr id=\"mon\" data-toggle=\"collapse\" data-target=\"#monSlots\" aria-expanded=\"true\" aria-controls=\"monSlots\">\n                <th scope=\"row\">Monday</th>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.mon.first.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.mon.second.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.mon.third.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.mon.fourth.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.mon.fifth.length}</span></div></td>\n                </tr>\n                <tr id=\"monSlots\" className=\"collapse\" aria-labelledby=\"mon\"><td colSpan=\"6\"><DaySlot slots={slots.mon} func={func}/></td></tr>\n                <tr id=\"tue\" data-toggle=\"collapse\" data-target=\"#tueSlots\" aria-expanded=\"true\" aria-controls=\"tueSlots\">\n                <th scope=\"row\">Tuesday</th>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.tue.first.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.tue.second.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.tue.third.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.tue.fourth.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.tue.fifth.length}</span></div></td>\n                </tr>\n                <tr id=\"tueSlots\" className=\"collapse\" aria-labelledby=\"tue\"><td colSpan=\"6\"><DaySlot slots={slots.tue} func={func}/></td></tr>\n                <tr id=\"wed\" data-toggle=\"collapse\" data-target=\"#wedSlots\" aria-expanded=\"true\" aria-controls=\"wedSlots\">\n                <th scope=\"row\">Wednesday</th>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.wed.first.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.wed.second.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.wed.third.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.wed.fourth.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.wed.fifth.length}</span></div></td>\n                </tr>\n                <tr id=\"wedSlots\" className=\"collapse\" aria-labelledby=\"wed\"><td colSpan=\"6\"><DaySlot slots={slots.wed} func={func}/></td></tr>\n                <tr id=\"thu\" data-toggle=\"collapse\" data-target=\"#thuSlots\" aria-expanded=\"true\" aria-controls=\"thuSlots\">\n                <th scope=\"row\">Thursday</th>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.thu.first.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.thu.second.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.thu.third.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.thu.fourth.length}</span></div></td>\n                <td><div className=\"d-flex justify-content-center\"><span className=\"badge rounded-pill bg-primary\">{slots.thu.fifth.length}</span></div></td>\n                </tr>\n                <tr id=\"thuSlots\" className=\"collapse\" aria-labelledby=\"thu\"><td colSpan=\"6\"><DaySlot slots={slots.thu} func={func}/></td></tr>\n            </tbody>\n        </table>\n        </div>\n        {selectedSlot ? <UpdateCard slot={selectedSlot} index={index} func={func}/> : null}\n        {addSlot ? <AddCard func={func}/> : null }\n        </div>\n    )\n\n}\n\nexport default Slot;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/academic/schedule.js",["249","250"],"import React, { useState, useEffect } from 'react';\n\nfunction getSchedule()\n{\n    let res = { \"schedule\": { sat: { first: 'Free', second: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' }, sun: { second: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" }, first: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" }, third: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" }, fourth: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" }, fifth: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" } }, mon: { first: 'Free', second: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' }, tue: { first: 'Free', second: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' }, wed: { second: { staffID: 'ac-10', _id: \"5fe5e7b93397bb4859bedcdf\", weekday: 'Wednesday', number: 'Second', location: \"5fe5e72d1a8106b169946528\", course: \"5fe5e2d23397bb4859bedcde\" }, first: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' }, thu: { first: 'Free', second: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' } } }\n\n    return res.schedule;\n}\n\nfunction Schedule()\n{\n    const slots = getSchedule();\n\n    return (\n        <div>\n            <h5 className=\"m-5\">Schedule</h5>\n        <div className=\"my-5 mx-5\">\n        <table className=\"table table-hover table-responsive-lg\">\n            <thead className=\"table-light\">\n                <tr>\n                <th scope=\"col\">Weekday</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>First</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Second</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Third</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Fourth</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Fifth</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr id=\"sat\" data-toggle=\"collapse\" data-target=\"#satSlots\" aria-expanded=\"true\" aria-controls=\"satSlots\">\n                <th scope=\"row\">Saturday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.first.course) ?\n                        <div> \n                        <p>Course: {slots.sat.first.course}</p>\n                        <p>Location: {slots.sat.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.second.course) ?\n                        <div> \n                        <p>Course: {slots.sat.second.course}</p>\n                        <p>Location: {slots.sat.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.third.course) ?\n                        <div> \n                        <p>Course: {slots.sat.third.course}</p>\n                        <p>Location: {slots.sat.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.sat.fourth.course}</p>\n                        <p>Location: {slots.sat.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.sat.fifth.course}</p>\n                        <p>Location: {slots.sat.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"sun\" data-toggle=\"collapse\" data-target=\"#sunSlots\" aria-expanded=\"true\" aria-controls=\"sunSlots\">\n                <th scope=\"row\">Sunday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.first.course) ?\n                        <div> \n                        <p>Course: {slots.sun.first.course}</p>\n                        <p>Location: {slots.sun.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.second.course) ?\n                        <div> \n                        <p>Course: {slots.sun.second.course}</p>\n                        <p>Location: {slots.sun.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.third.course) ?\n                        <div> \n                        <p>Course: {slots.sun.third.course}</p>\n                        <p>Location: {slots.sun.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.sun.fourth.course}</p>\n                        <p>Location: {slots.sun.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.sun.fifth.course}</p>\n                        <p>Location: {slots.sun.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"mon\" data-toggle=\"collapse\" data-target=\"#monSlots\" aria-expanded=\"true\" aria-controls=\"monSlots\">\n                <th scope=\"row\">Monday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.first.course) ?\n                        <div> \n                        <p>Course: {slots.mon.first.course}</p>\n                        <p>Location: {slots.mon.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.second.course) ?\n                        <div> \n                        <p>Course: {slots.mon.second.course}</p>\n                        <p>Location: {slots.mon.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.third.course) ?\n                        <div> \n                        <p>Course: {slots.mon.third.course}</p>\n                        <p>Location: {slots.mon.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.mon.fourth.course}</p>\n                        <p>Location: {slots.mon.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.mon.fifth.course}</p>\n                        <p>Location: {slots.mon.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"tue\" data-toggle=\"collapse\" data-target=\"#tueSlots\" aria-expanded=\"true\" aria-controls=\"tueSlots\">\n                <th scope=\"row\">Tuesday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.first.course) ?\n                        <div> \n                        <p>Course: {slots.tue.first.course}</p>\n                        <p>Location: {slots.tue.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.second.course) ?\n                        <div> \n                        <p>Course: {slots.tue.second.course}</p>\n                        <p>Location: {slots.tue.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.third.course) ?\n                        <div> \n                        <p>Course: {slots.tue.third.course}</p>\n                        <p>Location: {slots.tue.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.tue.fourth.course}</p>\n                        <p>Location: {slots.tue.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.tue.fifth.course}</p>\n                        <p>Location: {slots.tue.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"wed\" data-toggle=\"collapse\" data-target=\"#wedSlots\" aria-expanded=\"true\" aria-controls=\"wedSlots\">\n                <th scope=\"row\">Wednesday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.first.course) ?\n                        <div> \n                        <p>Course: {slots.wed.first.course}</p>\n                        <p>Location: {slots.wed.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.second.course) ?\n                        <div> \n                        <p>Course: {slots.wed.second.course}</p>\n                        <p>Location: {slots.wed.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.third.course) ?\n                        <div> \n                        <p>Course: {slots.wed.third.course}</p>\n                        <p>Location: {slots.wed.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.wed.fourth.course}</p>\n                        <p>Location: {slots.wed.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.wed.fifth.course}</p>\n                        <p>Location: {slots.wed.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"thu\" data-toggle=\"collapse\" data-target=\"#thuSlots\" aria-expanded=\"true\" aria-controls=\"thuSlots\">\n                <th scope=\"row\">Thursday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.first.course) ?\n                        <div> \n                        <p>Course: {slots.thu.first.course}</p>\n                        <p>Location: {slots.thu.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.second.course) ?\n                        <div> \n                        <p>Course: {slots.thu.second.course}</p>\n                        <p>Location: {slots.thu.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.third.course) ?\n                        <div> \n                        <p>Course: {slots.thu.third.course}</p>\n                        <p>Location: {slots.thu.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.thu.fourth.course}</p>\n                        <p>Location: {slots.thu.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.thu.fifth.course}</p>\n                        <p>Location: {slots.thu.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n            </tbody>\n        </table>\n        </div>\n        </div>\n    )\n}\n\nexport default Schedule;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/login/login.js",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/home/home.js",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/navbar/navbar.js",["251","252","253"],"import React, { Component } from \"react\";\nimport * as authService from \"../login/authenticationService\";\n\nimport {\n  Navbar,\n  Nav,\n  Breadcrumb,\n  Button,\n  OverlayTrigger,\n  Tooltip,\n  Card,\n  Popover,\n} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport SideNav, { MenuIcon } from \"react-simple-sidenav\";\nimport { Link } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst axios = require(\"axios\");\naxios.defaults.headers.common[\"auth-token\"] = localStorage.getItem(\"token\");\n\nclass NavComponent extends Component {\n  state = {\n    showNav: false,\n    currentPage: \"\",\n    user: JSON.parse(localStorage.getItem('user'))\n  };\n\n  handleLogout = (event) => {\n    event.preventDefault();\n\n    authService\n      .onLogout()\n      .then((res) => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.log(error.response.data.msg);\n      });\n  };\n\n  //TODO: Success and fail toast if there's time!\n  handleSignOut = (event) => {\n    axios\n      .put(\"http://localhost:4000/staff/signout\", {\n        headers: {\n          'auth-token': localStorage.getItem('token') \n        }\n      })\n      .then(function (response) {\n        toast.success(\"Signed Out Successfully\");\n\n        console.log(\"sign out works\");\n      })\n      .catch(function (error) {\n        // handle error\n        toast.error(\"Sign out Failed \", error);\n\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  //TODO: Success and fail toast if there's time!\n  handleSignIn = (event) => {\n    let req = axios\n      .put(\"http://localhost:4000/staff/signin\", {\n        headers: {\n          'auth-token': localStorage.getItem('token') \n        }\n      })\n      .then(function (response) {\n        // handle success\n        toast.success(\"Signed In Successfully\");\n        console.log(\"sign in works\");\n      })\n      .catch(function (error) {\n        // handle error\n        toast.error(\"Sign In Failed \");\n\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n      console.log(req);\n  };\n\n  render() {\n    const navItems = [\n      <div>\n        <h1 className=\"text-muted\">My Info</h1>\n        <ul className=\"list-unstyled\">\n          <li>\n            <Link\n              onClick={() => {\n                this.setState({ currentPage: \"My Attendance\" });\n              }}\n              to=\"/viewAttendance\"\n            >\n              My Attendance\n            </Link>\n          </li>\n          <li>\n            <Link\n              onClick={() => {\n                this.setState({ currentPage: \"My Schedule\" });\n              }}\n              to=\"/schedule\"\n            >\n              My Schedule\n            </Link>\n          </li>\n          <li>\n            <Link\n              onClick={() => {\n                this.setState({ currentPage: \"View Profile\" });\n              }}\n              to=\"/viewProfile\"\n            >\n              My Profile\n            </Link>\n          </li>\n        </ul>\n      </div>,\n      <div>\n        <h1 className=\"text-muted\">Staff Management</h1>\n        <Link\n          onClick={() => {\n            this.setState({ currentPage: \"New Staff\" });\n          }}\n          to=\"/newStaff\"\n        >\n          New Staff\n        </Link>\n        <br></br>\n        <Link\n          onClick={() => {\n            this.setState({ currentPage: \"View Staff\" });\n          }}\n          to=\"/viewStaff\"\n        >\n          Existing Staff\n        </Link>\n        <br></br>\n        <Link\n          onClick={() => {\n            this.setState({ currentPage: \"ATT\" });\n          }}\n          to=\"/att\"\n        >\n          Staff Attendance\n        </Link>\n      </div>,\n      <div>\n        <h1 className=\"text-muted\">Faculty & Facility Management</h1>\n        <Link\n          onClick={() => {\n            this.setState({ currentPage: \"Locations\" });\n          }}\n          to=\"/locations\"\n        >\n          Locations\n        </Link>\n        <br></br>\n        <Link\n          onClick={() => {\n            this.setState({ currentPage: \"Faculties\" });\n          }}\n          to=\"/faculties\"\n        >\n          Faculties\n        </Link>\n      </div>,\n    ];\n\n    const handleClick = () => {\n      const elem = document.getElementById(\"sidebar\");\n      elem.classList.toggle(\"collapse\");\n    };\n\n    const renderTooltip = (props) => (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        Simple tooltip\n      </Tooltip>\n    );\n    //TODO: placeholder - replace with role of logged in user\n    const popover = (\n      <Popover id=\"popover-basic\">\n        <Popover.Title as=\"h3\"> Quick Info</Popover.Title>\n        <Popover.Content>\n          Day Off: {this.state.user.dayOff}\n          <br></br>\n          Office Location: {this.state.user.officeLocation}\n          <br></br>\n          Faculty: {this.state.user.facultyName}\n          <br></br>\n          ðŸ’“ {this.state.user.others}\n        </Popover.Content>\n      </Popover>\n    );\n\n    return (\n      <React.Fragment>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand\n            onClick={() => {\n              this.setState({\n                showNav: true,\n              });\n            }}\n          >\n            <Image\n              src=\"https://img.icons8.com/cute-clipart/64/000000/user-male.png\"\n              width=\"40\"\n              height=\"40\"\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Link\n                onClick={() => {\n                  this.setState({ currentPage: \"Home\" });\n                }}\n                className=\"nav-link\"\n                to=\"/\"\n                style={{ color: \"#fff\" }}\n              >\n                Dashboard\n              </Link>\n              <Link\n                className=\"nav-link\"\n                onClick={() => {\n                  this.setState({ currentPage: \"Edit Profile\" });\n                }}\n                to=\"/editProfile\"\n                style={{ color: \"#fff\" }}\n              >\n                Edit Profile\n              </Link>\n\n              <Link\n                className=\"nav-link\"\n                onClick={() => {\n                  this.setState({ currentPage: \"View Profile\" });\n                }}\n                to=\"/viewProfile\"\n                style={{ color: \"#fff\" }}\n              >\n                View Profile\n              </Link>\n              {/*<NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n          </NavDropdown>*/}\n            </Nav>\n\n            <Nav>\n              <Nav.Link onClick={this.handleSignIn}>Sign In</Nav.Link>\n\n              {/* display successfully signed out toast */}\n              <Nav.Link onClick={this.handleSignOut}>Sign Out</Nav.Link>\n              <Nav.Link onClick={this.handleLogout}>Log Out</Nav.Link>\n\n              <Nav.Link>\n                {/*todo: this is a placeholder. Put name of the current user!*/}\n                <OverlayTrigger placement=\"bottom\" overlay={popover}>\n                  <Button variant=\"dark\">{this.state.user.name}</Button>\n                </OverlayTrigger>\n              </Nav.Link>\n\n              <div className=\"avatar avatar-xl\">\n                <img\n                  src=\"https://img.icons8.com/cute-clipart/64/000000/user-male.png\"\n                  style={{ maxHeight: 50, maxWidth: 50 }}\n                  alt=\"...\"\n                  className=\"avatar-img rounded-circle\"\n                />\n              </div>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <ToastContainer />\n        <Breadcrumb>\n          <Link to=\"/\" style={{ color: \"#000\" }}>\n            GUC Portal /{\" \"}\n          </Link>\n          <Breadcrumb.Item active>{this.state.currentPage}</Breadcrumb.Item>\n        </Breadcrumb>\n\n        <div>\n          <MenuIcon\n            onClick={() => {\n              this.setState({\n                showNav: true,\n              });\n            }}\n          />\n          <SideNav\n            title=\"MENU\"\n            items={navItems}\n            showNav={this.state.showNav}\n            onHideNav={() => {\n              this.setState({\n                showNav: false,\n              });\n            }}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavComponent;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/CI/CIStaff.js",["254","255","256","257","258","259","260","261","262","263","264","265"],"import React, { Component, createRef, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nimport {\n  Container,\n  Jumbotron,\n  Button,\n  Table,\n  Col,\n  Form,\n  Modal,\n  Tooltip,\n} from \"react-bootstrap\";\nimport Overlay from \"react-bootstrap/Overlay\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport ViewProfiles from \"../../views/viewStaffProfiles\";\nimport Schedule from \"../../views/schedule\";\nimport { parseSchedule } from \"../../util/parseSchedule\";\nlet token = localStorage.getItem(\"token\");\nvar axios = require(\"axios\");\n\nexport class CIStaff extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleAssign = this.handleAssign.bind(this);\n    this.filterHandler = this.filterHandler.bind(this);\n    this.handleUpdateSlot = this.handleUpdateSlot.bind(this);\n    this.handleAssignSlot = this.handleAssignSlot.bind(this);\n    this.handleDeleteSlot = this.handleDeleteSlot.bind(this);\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.state = {\n      staff: [],\n      radio: [],\n      show: false,\n      result: [],\n      schedule: [],\n      assign: null,\n      //assign - delete\n      assignSlotCourse: null,\n      assignLocation: null,\n      assignNumber: null,\n      assignWeekDay: null,\n      //\n      updateSlotCourseBefore: null,\n      updateLocationBefore: null,\n      updateNumberBefore: null,\n      updateWeekDayBefore: null,\n      // update\n      updateSlotCourseAfter: null,\n      updateLocationAfter: null,\n      updateNumberAfter: null,\n      updateWeekDayAfter: null,\n      //\n      courseCodeBefore: null,\n      courseCode: null,\n      courseCodeAfter: null,\n      delete: null,\n      courseFilter: null,\n      initial: \"Show coverage\",\n      data: [],\n      locations: [],\n      number: [\"First\", \"Second\", \"Third\", \"Fourth\", \"Fifth\"],\n      weekday: [\n        \"Saturday\",\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n      ],\n      columns: [\n        {\n          dataField: \"courseCode\",\n          text: \"Course Code\",\n        },\n        {\n          dataField: \"coverage\",\n          text: \"Coverage\",\n        },\n      ],\n      assignments: [],\n    };\n\n    this.Result = createRef();\n  }\n  courseChooseHandler(event) {\n    this.setState({ assignSlotCourse: event.target.value });\n  }\n  setValue(event) {\n    this.setState({ assign: event.target.value });\n  }\n  deleteValue(event) {\n    this.setState({ delete: event.target.value });\n    console.log(this.state);\n  }\n  setBeforeCode(event) {\n    this.setState({ courseCodeBefore: event.target.value });\n    //console.log(event.target.value);\n    console.log(this.state);\n  }\n  setAfterCode(event) {\n    this.setState({ courseCodeAfter: event.target.value });\n    console.log(this.state);\n  }\n  async componentWillMount() {\n    var config = {\n      method: \"get\",\n      url:\n        \"http://localhost:4000/ci/viewStaff\" +\n        (this.state.courseFilter\n          ? \"?courseCode=\" + this.state.courseFilter\n          : \"\"),\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var config2 = {\n      method: \"get\",\n      url: \"http://localhost:4000/ci/getCourses\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n\n    var configCoverage = {\n      method: \"get\",\n      url: \"http://localhost:4000/ci/viewCoverage\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var configLocations = {\n      method: \"get\",\n      url: \"http://localhost:4000/general/getLocations\",\n      headers: {},\n    };\n\n    let [\n      Response,\n      result2,\n      coverageResult,\n      locationResult,\n    ] = await Promise.all([\n      axios(config),\n      axios(config2),\n      axios(configCoverage),\n      axios(configLocations),\n    ]);\n\n    let data = coverageResult.data.result;\n    console.log(data);\n    let radio = Array(Response.data.result.length).fill(false);\n    let result = [\n      <option value=\"\" selected disabled>\n        Please select\n      </option>,\n    ];\n    result.push(\n      result2.data.result.map((el) => {\n        return <option value={el}>{el}</option>;\n      })\n    );\n\n    let scheduleResult = [];\n\n    Response.data.result.map((el) => {\n      let schedule = el.schedule;\n      schedule = parseSchedule(schedule);\n\n      let temp = (\n        <Schedule staff={{ schedule, text: \"Schedule: \" + el.staffID }} />\n      );\n      scheduleResult.push(temp);\n    });\n\n    // locations\n    let locResult = [\n      <option value=\"\" selected disabled>\n        Please select\n      </option>,\n    ];\n    locResult.push(\n      locationResult.data.result.map((el) => {\n        return <option value={el}>{el}</option>;\n      })\n    );\n\n    let WeekResult = [\n      <option value=\"\" selected disabled>\n        Please select\n      </option>,\n    ];\n    WeekResult.push(\n      this.state.weekday.map((el) => {\n        return <option value={el}>{el}</option>;\n      })\n    );\n\n    let numberResult = [\n      <option value=\"\" selected disabled>\n        Please select\n      </option>,\n    ];\n    numberResult.push(\n      this.state.number.map((el) => {\n        return <option value={el}>{el}</option>;\n      })\n    );\n    this.setState({\n      staff: Response.data.result,\n      radio,\n      result,\n      data,\n      assignments: scheduleResult,\n      locations: locResult,\n      weekday: WeekResult,\n      number: numberResult,\n    });\n  }\n  handleDelete() {\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        courseCode: this.state.delete,\n      },\n    });\n\n    var config = {\n      method: \"delete\",\n      url: \"http://localhost:4000/ci/deleteTafromCourse\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Tyipe\": \"application/json\",\n      },\n      data: data,\n    };\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Course assignment was deleted Successfully\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n  handleAssign() {\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        courseCode: this.state.assign,\n      },\n    });\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:4000/ci/assignTaToCourse\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Course was assigned to a member Successfully\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n  async filterHandler(courseFilter) {\n    courseFilter = courseFilter ? courseFilter.target.value : courseFilter;\n    console.log(courseFilter);\n    var config = {\n      method: \"get\",\n      url:\n        \"http://localhost:4000/ci/viewStaff\" +\n        (courseFilter ? \"?courseCode=\" + courseFilter : \"\"),\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    var config2 = {\n      method: \"get\",\n      url: \"http://localhost:4000/hod/getCourses\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    console.log(config);\n    let [Response, result2] = await Promise.all([\n      axios(config),\n      axios(config2),\n    ]);\n    let radio = Array(Response.data.result.length).fill(false);\n    let result = [\n      <option value=\"\" selected disabled>\n        Please select\n      </option>,\n    ];\n    result.push(\n      result2.data.result.map((el) => {\n        return <option value={el}>{el}</option>;\n      })\n    );\n\n    this.setState({\n      staff: Response.data.result,\n      radio,\n      result,\n    });\n  }\n\n  handleClick() {\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        courseCodeBefore: this.state.courseCodeBefore,\n        courseCodeAfter: this.state.courseCodeAfter,\n      },\n    });\n    console.log(data);\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:4000/ci/updateTACourse\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Success\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n  handleAssignSlot() {\n    var axios = require(\"axios\");\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        weekday: this.state.assignWeekDay,\n        number: this.state.assignNumber,\n        courseCode: this.state.courseCode,\n        location: this.state.assignLocation,\n      },\n    });\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:4000/ci/AssignUnassignedSlot\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n    console.log(config);\n\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Course updated Successfully\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n  handleDeleteSlot() {\n    var axios = require(\"axios\");\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        weekday: this.state.assignWeekDay,\n        number: this.state.assignNumber,\n        courseCode: this.state.courseCode,\n        location: this.state.assignLocation,\n      },\n    });\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:4000/ci/deleteAcademicFromSlot\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n    console.log(config);\n\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Success\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n  handleUpdateSlot() {\n    var axios = require(\"axios\");\n    var data = JSON.stringify({\n      data: {\n        staffID: this.Result.current.state.radio,\n        courseCode: this.state.courseCodeBefore,\n\n        weekdayBefore: this.state.updateWeekDayBefore,\n        numberBefore: this.state.updateNumberBefore,\n        locationBefore: this.state.updateLocationBefore,\n        weekdayAfter: this.state.updateWeekDayBefore,\n        numberAfter: this.state.updateNumberAfter,\n        locationAfter: this.state.updateLocationAfter,\n      },\n    });\n\n    console.log(data);\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:4000/ci/updateSlot\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        toast.success(\"Success\");\n      })\n      .catch(function (error) {\n        toast.error(error.response.data.msg);\n      });\n  }\n  render() {\n    return (\n      <Container>\n        <ToastContainer />\n        <div>Filter (Instructors only ... doesnt include the TAs):</div>\n        <Form.Control\n          value={this.state.courseFilter}\n          onChange={this.filterHandler.bind(this)}\n          type=\"text\"\n          placeholder=\"Enter course code to be able to filter by course\"\n        />\n        <ViewProfiles ref={this.Result} staff={this.state} />{\" \"}\n        <div>\n          Please select a staffID first in order to perform the next\n          functionalities\n        </div>\n        <div class=\"d-flex justify-content-around\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            data-toggle=\"collapse\"\n            href=\"#assign\"\n            aria-controls=\"assign\"\n          >\n            Assign member to a course{\" \"}\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-warning\"\n            onClick={() => {\n              this.setState({ show: this.state.show });\n            }}\n            data-toggle=\"collapse\"\n            href=\"#multiCollapseExample1\"\n            aria-controls=\"multiCollapseExample1\"\n            aria-label=\"Default select example\"\n            role=\"button\"\n            aria-expanded=\"true\"\n          >\n            Update member courses\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            data-toggle=\"collapse\"\n            href=\"#delete\"\n            aria-controls=\"delete\"\n          >\n            Delete member from a course{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"delete\">\n          <label for=\"sel1\">Delete course:</label>\n          <select\n            class=\"form-select\"\n            onChange={this.deleteValue.bind(this)}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.result}\n          </select>\n\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            onClick={this.handleDelete.bind(this)}\n          >\n            Delete Assignment{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"multiCollapseExample1\">\n          <label for=\"sel1\">Update course: The old course</label>\n          <select\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n            onChange={this.setBeforeCode.bind(this)}\n            onfocus=\"this.selectedIndex = -1;\"\n          >\n            {this.state.result}\n          </select>\n\n          <label for=\"sel2\">Update course: The new course</label>\n          <select\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n            onChange={this.setAfterCode.bind(this)}\n            onfocus=\"this.selectedIndex = -1;\"\n          >\n            {this.state.result}\n          </select>\n\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            onClick={this.handleClick}\n          >\n            Submit Update{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"assign\">\n          <label for=\"sel1\">Assign course:</label>\n          <select\n            class=\"form-select\"\n            onChange={this.setValue.bind(this)}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.result}\n          </select>\n\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            onClick={this.handleAssignSlot.bind(this)}\n          >\n            Submit Assignment{\" \"}\n          </button>\n        </div>\n        <br></br>\n        <div class=\"d-flex justify-content-around\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            data-toggle=\"collapse\"\n            href=\"#assignSlot\"\n            aria-controls=\"assignSlot\"\n          >\n            Assign slot to a member{\" \"}\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-warning\"\n            onClick={() => {\n              this.setState({ show: this.state.show });\n            }}\n            data-toggle=\"collapse\"\n            href=\"#updateSlot\"\n            aria-controls=\"updateSlot\"\n            aria-label=\"Default select example\"\n            role=\"button\"\n            aria-expanded=\"true\"\n          >\n            Update member slot\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            data-toggle=\"collapse\"\n            href=\"#deleteSlot\"\n            aria-controls=\"deleteSlot\"\n          >\n            Delete member from a slot{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"deleteSlot\">\n          <label for=\"sel1\">choose the course code:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) => this.setState({ courseCode: e.target.value })}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.result}\n          </select>\n\n          <label for=\"sel1\">choose the weekday:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) => this.setState({ assignWeekDay: e.target.value })}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.weekday}\n          </select>\n          <label for=\"sel1\">choose the slot number:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) => this.setState({ assignNumber: e.target.value })}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.number}\n          </select>\n          <label for=\"sel1\">choose the location:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) => this.setState({ assignLocation: e.target.value })}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.locations}\n          </select>\n\n          <br />\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-danger\"\n            onClick={this.handleDeleteSlot.bind(this)}\n          >\n            Delete Slot Assignment{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"updateSlot\">\n          <label for=\"sel1\">choose the course code:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) =>\n              this.setState({ courseCodeBefore: e.target.value })\n            }\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.result}\n          </select>\n\n          <label for=\"sel1\">choose the old weekday:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) =>\n              this.setState({ updateWeekDayBefore: e.target.value })\n            }\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.weekday}\n          </select>\n          <label for=\"sel1\">choose the old slot number:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) =>\n              this.setState({ updateNumberBefore: e.target.value })\n            }\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.number}\n          </select>\n          <label for=\"sel1\">choose the old location:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) =>\n              this.setState({ updateLocationBefore: e.target.value })\n            }\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.locations}\n          </select>\n\n          <label for=\"sel1\">choose the new weekday:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) =>\n              this.setState({ updateWeekDayAfter: e.target.value })\n            }\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.weekday}\n          </select>\n          <label for=\"sel1\">choose the new slot number:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) =>\n              this.setState({ updateNumberAfter: e.target.value })\n            }\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.number}\n          </select>\n          <label for=\"sel1\">choose the new location:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) =>\n              this.setState({ updateLocationAfter: e.target.value })\n            }\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.locations}\n          </select>\n\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            onClick={this.handleUpdateSlot.bind(this)}\n          >\n            Submit Update{\" \"}\n          </button>\n        </div>\n        <div class=\"collapse multi-collapse\" id=\"assignSlot\">\n          <label for=\"sel1\">choose the course code:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) => this.setState({ courseCode: e.target.value })}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.result}\n          </select>\n\n          <label for=\"sel1\">choose the weekday:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) => this.setState({ assignWeekDay: e.target.value })}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.weekday}\n          </select>\n          <label for=\"sel1\">choose the slot number:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) => this.setState({ assignNumber: e.target.value })}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.number}\n          </select>\n          <label for=\"sel1\">choose the location:</label>\n          <select\n            class=\"form-select\"\n            onChange={(e) => this.setState({ assignLocation: e.target.value })}\n            onfocus=\"this.selectedIndex = -1;\"\n            aria-label=\"Default select example\"\n          >\n            {this.state.locations}\n          </select>\n\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            onClick={this.handleAssignSlot.bind(this)}\n          >\n            Submit Assignment{\" \"}\n          </button>\n        </div>\n        <br></br>\n        <br />\n        <br />\n        <hr\n          style={{\n            color: \"black\",\n            backgroundColor: \"black\",\n            height: 5,\n          }}\n        />\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          data-toggle=\"collapse\"\n          href=\"#coverage\"\n          aria-controls=\"coverage\"\n        >\n          Show Coverage{\" \"}\n        </button>\n        <div class=\"collapse multi-collapse\" id=\"coverage\">\n          <p className=\"Table-header\">Coverage</p>\n\n          <BootstrapTable\n            keyField=\"id\"\n            data={this.state.data}\n            columns={this.state.columns}\n          />\n        </div>\n        <br />\n        <br />\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          data-toggle=\"collapse\"\n          href=\"#assignment\"\n          aria-controls=\"assignment\"\n        >\n          Show course Assignments{\" \"}\n        </button>\n        <div class=\"collapse multi-collapse\" id=\"assignment\">\n          <p className=\"Table-header\">Assignments</p>\n          {this.state.assignments}\n        </div>\n      </Container>\n    );\n    //    ));\n  }\n}\n\nexport default CIStaff;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/academic/repReq.js",["266","267","268"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction getRequests()\n{\n    let res = [\n        {objectID: \"438577463\", senderID: \"43247548357\", receiverID: \"4yu453y8543\", status: \"Pending\", comment: \"kjdlksfjal;dkdjfsdsal\", replacement: {replacementDay: new Date(2020, 5, 6), replacementSlot: {slot: {weekday: \"Monday\", number: \"Second\", location: \"47587389435\", course: \"3234758295749\", staffID: \"ac-3\"}}}, sentDate: new Date(2020, 5, 12), responseDate: null},\n        {objectID: \"676458933\", senderID: \"43247548357\", receiverID: \"4yu453y8543\", status: \"Accepted\", comment: \"adskfjhdaskljfhdslkjahfjldsajh\", replacement: {replacementDay: new Date(2020, 5, 6), replacementSlot: {slot: {weekday: \"Tuesday\", number: \"First\", location: \"47587389435\", course: \"3234758295749\", staffID: \"ac-4\"}}}, sentDate: new Date(2020, 5, 12), responseDate: new Date(2021, 1, 1)},\n        {objectID: \"943789587\", senderID: \"43247548357\", receiverID: \"4yu453y8543\", status: \"Rejected\", comment: \"dfasndhsakljdhflkahdflkadsf\", replacement: {replacementDay: new Date(2020, 5, 6), replacementSlot: {slot: {weekday: \"Sunday\", number: \"Fifth\", location: \"47587389435\", course: \"3234758295749\", staffID: \"ac-8\"}}}, sentDate: new Date(2020, 5, 12), responseDate: new Date(2021, 1, 1)}\n    ]\n\n    return res;\n}\n\nfunction filterRequests(requests)\n{\n    const n = requests.length;\n\n    let pending = [];\n    let accepted = [];\n    let rejected = [];\n\n    for(let i=0; i<n; i++)\n    {\n        const req = requests[i];\n\n        if(req.status === \"Pending\")\n            pending.push(req);\n        else if(req.status === \"Accepted\")\n            accepted.push(req);\n        else if(req.status === \"Rejected\")\n            rejected.push(req);\n    }\n\n    const res = {p: pending, a: accepted, r: rejected};\n\n    return res;\n}\n\nfunction PendingItem({req, index, func})\n{\n    const{addAccepted, removePending, addRejected} = func;\n\n    const updateAcc = (req, index) => {\n        removePending(index);\n        addAccepted(req);\n    }\n\n    const updateRej = (req, index) => {\n        removePending(index);\n        addRejected(req);\n    }\n\n    return (\n        <div className=\"card text-white bg-primary mb-3\" key={req.objectID}>\n                <div className=\"card-body\">\n                    <div className=\"d-block mb-3\">\n                        <p className=\"d-inline\">Sender: {req.senderID}</p>\n                        <p className=\"d-inline ms-3\">Course: {req.replacement.replacementSlot.slot.course}</p>\n                        <p className=\"d-inline ms-3\">Date: {req.replacement.replacementDay.toLocaleString('en-GB')}</p>\n                        <p className=\"d-inline ms-3\">Slot: {req.replacement.replacementSlot.slot.weekday} {req.replacement.replacementSlot.slot.number}</p>\n                        <p className=\"d-inline ms-3\">Sent: {req.sentDate.toLocaleString('en-GB')}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                        <button className=\"btn btn-success\" onClick={() => updateAcc(req, index) }>Accept</button>\n                        <button className=\"btn btn-danger ms-3\" onClick={() => updateRej(req, index) }>Reject</button>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nfunction Pending(props)\n{\n    const pending = props.pending;\n\n    const func = props.func;\n\n    return ( pending.length===0 ? <p style={{textAlign:\"center\"}}>There are no pending requests</p> :\n        pending.map( (req, i) => \n            <PendingItem req={req} index={i} func={func}/> \n        )\n    );\n}\n\nfunction AcceptedItem({req})\n{\n    return (\n        <div className=\"card text-white bg-primary mb-3\" key={req.objectID}>\n                <div className=\"card-body\">\n                    <div className=\"d-block mb-3\">\n                        <p className=\"d-inline\">Sender: {req.senderID}</p>\n                        <p className=\"d-inline ms-3\">Course: {req.replacement.replacementSlot.slot.course}</p>\n                        <p className=\"d-inline ms-3\">Date: {req.replacement.replacementDay.toLocaleString('en-GB')}</p>\n                        <p className=\"d-inline ms-3\">Slot: {req.replacement.replacementSlot.slot.weekday} {req.replacement.replacementSlot.slot.number}</p>\n                        <p className=\"d-inline ms-3\">Sent: {req.sentDate.toLocaleString('en-GB')}</p>\n                        <p className=\"d-inline ms-3\">Response: {req.responseDate.toLocaleString('en-GB')}</p>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nfunction Accepted(props)\n{\n    const accepted = props.accepted;\n\n    return ( accepted.length===0 ? <p style={{textAlign:\"center\"}}>There are no accepted requests</p> :\n        accepted.map( req => \n           <AcceptedItem req={req}/>\n        )\n    )\n}\n\nfunction RejectedItem({req})\n{\n    return (\n        <div className=\"card text-white bg-primary mb-3\" key={req.objectID}>\n                <div className=\"card-body\">\n                    <div className=\"d-block mb-3\">\n                        <p className=\"d-inline\">Sender: {req.senderID}</p>\n                        <p className=\"d-inline ms-3\">Course: {req.replacement.replacementSlot.slot.course}</p>\n                        <p className=\"d-inline ms-3\">Date: {req.replacement.replacementDay.toLocaleString('en-GB')}</p>\n                        <p className=\"d-inline ms-3\">Slot: {req.replacement.replacementSlot.slot.weekday} {req.replacement.replacementSlot.slot.number}</p>\n                        <p className=\"d-inline ms-3\">Sent: {req.sentDate.toLocaleString('en-GB')}</p>\n                        <p className=\"d-inline ms-3\">Response: {req.responseDate.toLocaleString('en-GB')}</p>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nfunction Rejected(props)\n{\n    const rejected = props.rejected;\n\n    return ( rejected.length===0 ? <p style={{textAlign:\"center\"}}>There are no rejected requests</p> :\n       rejected.map( req => \n            <RejectedItem req={req}/>\n        )\n    )\n}\n\n\n\nfunction Replacement()\n{\n    const requests = getRequests();\n    const [pending, setPending] = useState([]);\n    const [accepted, setAccepted] = useState([]);\n    const [rejected, setRejected] = useState([]);\n\n    const [addReq, setAddReq] = useState(false);\n\n    //Mount \n    useEffect( () => {\n        const {p, a, r} = filterRequests( requests );\n        setPending(p);\n        setAccepted(a);\n        setRejected(r);\n    }, []);\n\n    //TODO: mongoose\n    const addAccepted = (req) => {\n        req.responseDate = new Date();\n        setAccepted( [...accepted, req] );\n    }\n    const removePending = (i) => {\n        pending.splice(i,1);\n        setPending(pending);\n    }\n    \n    const addRejected = (req) => {\n        req.responseDate = new Date();\n        setRejected( [...rejected, req] );\n    }\n\n    const vals = {\n        addAccepted: addAccepted,\n        removePending: removePending,\n        addRejected: addRejected\n    }\n;\n    \n    return (\n        <div className=\"m-5\">\n            <h4 className=\"mb-4\">Replacement Request</h4>\n        <div className=\"d-flex justify-content-center m-4\">\n            <Link className=\"btn btn-success\" to=\"/academic/send-replacement\">Send Replacement</Link>\n        </div>\n        <div>\n            <h5>Pending</h5>\n            <Pending pending= {pending} func={vals}/>\n        </div>\n\n        <div>\n            <h5>Accepted</h5>\n            <Accepted accepted={accepted}/>\n        </div>\n\n        <div>\n            <h5>Rejected</h5>\n            <Rejected rejected={rejected}/>\n        </div>\n        </div>\n    )\n}\n\nexport default Replacement;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/academic/sendRep.js",["269","270"],"import React, { useState, useEffect } from 'react';\n\n\nfunction getSchedule()\n{\n    let res = { \"schedule\": { sat: { first: 'Free', second: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' }, sun: { second: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" }, first: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" }, third: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" }, fourth: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" }, fifth: { staffID: 'ac-10', _id: \"5fe60e3702de9f499caaccc5\", weekday: 'Sunday', number: 'Second', location: \"5fe5fda33397bb4859bedce2\", course: \"5fe5e2d23397bb4859bedcde\" } }, mon: { first: 'Free', second: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' }, tue: { first: 'Free', second: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' }, wed: { second: { staffID: 'ac-10', _id: \"5fe5e7b93397bb4859bedcdf\", weekday: 'Wednesday', number: 'Second', location: \"5fe5e72d1a8106b169946528\", course: \"5fe5e2d23397bb4859bedcde\" }, first: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' }, thu: { first: 'Free', second: 'Free', third: 'Free', fourth: 'Free', fifth: 'Free' } } }\n\n    return res.schedule;\n}\n\nfunction SchTable()\n{\n    const slots = getSchedule();\n\n    return (\n        <div className=\"my-5 mx-5\">\n        <table className=\"table table-hover table-responsive-lg\">\n            <thead className=\"table-light\">\n                <tr>\n                <th scope=\"col\">Weekday</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>First</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Second</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Third</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Fourth</th>\n                <th scope=\"col\" style={{\"text-align\":\"center\"}}>Fifth</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr id=\"sat\" data-toggle=\"collapse\" data-target=\"#satSlots\" aria-expanded=\"true\" aria-controls=\"satSlots\">\n                <th scope=\"row\">Saturday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.first.course) ?\n                        <div> \n                        <p>Course: {slots.sat.first.course}</p>\n                        <p>Location: {slots.sat.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.second.course) ?\n                        <div> \n                        <p>Course: {slots.sat.second.course}</p>\n                        <p>Location: {slots.sat.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.third.course) ?\n                        <div> \n                        <p>Course: {slots.sat.third.course}</p>\n                        <p>Location: {slots.sat.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.sat.fourth.course}</p>\n                        <p>Location: {slots.sat.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sat.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.sat.fifth.course}</p>\n                        <p>Location: {slots.sat.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"sun\" data-toggle=\"collapse\" data-target=\"#sunSlots\" aria-expanded=\"true\" aria-controls=\"sunSlots\">\n                <th scope=\"row\">Sunday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.first.course) ?\n                        <div> \n                        <p>Course: {slots.sun.first.course}</p>\n                        <p>Location: {slots.sun.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.second.course) ?\n                        <div> \n                        <p>Course: {slots.sun.second.course}</p>\n                        <p>Location: {slots.sun.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.third.course) ?\n                        <div> \n                        <p>Course: {slots.sun.third.course}</p>\n                        <p>Location: {slots.sun.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.sun.fourth.course}</p>\n                        <p>Location: {slots.sun.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.sun.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.sun.fifth.course}</p>\n                        <p>Location: {slots.sun.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"mon\" data-toggle=\"collapse\" data-target=\"#monSlots\" aria-expanded=\"true\" aria-controls=\"monSlots\">\n                <th scope=\"row\">Monday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.first.course) ?\n                        <div> \n                        <p>Course: {slots.mon.first.course}</p>\n                        <p>Location: {slots.mon.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.second.course) ?\n                        <div> \n                        <p>Course: {slots.mon.second.course}</p>\n                        <p>Location: {slots.mon.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.third.course) ?\n                        <div> \n                        <p>Course: {slots.mon.third.course}</p>\n                        <p>Location: {slots.mon.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.mon.fourth.course}</p>\n                        <p>Location: {slots.mon.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.mon.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.mon.fifth.course}</p>\n                        <p>Location: {slots.mon.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"tue\" data-toggle=\"collapse\" data-target=\"#tueSlots\" aria-expanded=\"true\" aria-controls=\"tueSlots\">\n                <th scope=\"row\">Tuesday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.first.course) ?\n                        <div> \n                        <p>Course: {slots.tue.first.course}</p>\n                        <p>Location: {slots.tue.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.second.course) ?\n                        <div> \n                        <p>Course: {slots.tue.second.course}</p>\n                        <p>Location: {slots.tue.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.third.course) ?\n                        <div> \n                        <p>Course: {slots.tue.third.course}</p>\n                        <p>Location: {slots.tue.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.tue.fourth.course}</p>\n                        <p>Location: {slots.tue.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.tue.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.tue.fifth.course}</p>\n                        <p>Location: {slots.tue.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"wed\" data-toggle=\"collapse\" data-target=\"#wedSlots\" aria-expanded=\"true\" aria-controls=\"wedSlots\">\n                <th scope=\"row\">Wednesday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.first.course) ?\n                        <div> \n                        <p>Course: {slots.wed.first.course}</p>\n                        <p>Location: {slots.wed.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.second.course) ?\n                        <div> \n                        <p>Course: {slots.wed.second.course}</p>\n                        <p>Location: {slots.wed.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.third.course) ?\n                        <div> \n                        <p>Course: {slots.wed.third.course}</p>\n                        <p>Location: {slots.wed.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.wed.fourth.course}</p>\n                        <p>Location: {slots.wed.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.wed.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.wed.fifth.course}</p>\n                        <p>Location: {slots.wed.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n                <tr id=\"thu\" data-toggle=\"collapse\" data-target=\"#thuSlots\" aria-expanded=\"true\" aria-controls=\"thuSlots\">\n                <th scope=\"row\">Thursday</th>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.first.course) ?\n                        <div> \n                        <p>Course: {slots.thu.first.course}</p>\n                        <p>Location: {slots.thu.first.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.second.course) ?\n                        <div> \n                        <p>Course: {slots.thu.second.course}</p>\n                        <p>Location: {slots.thu.second.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.third.course) ?\n                        <div> \n                        <p>Course: {slots.thu.third.course}</p>\n                        <p>Location: {slots.thu.third.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.fourth.course) ?\n                        <div> \n                        <p>Course: {slots.thu.fourth.course}</p>\n                        <p>Location: {slots.thu.fourth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                <td><div className=\"d-flex justify-content-center\">\n                    { (slots.thu.fifth.course) ?\n                        <div> \n                        <p>Course: {slots.thu.fifth.course}</p>\n                        <p>Location: {slots.thu.fifth.location}</p>\n                        </div> :\n                        <p>Free</p>\n                    }\n                    </div>\n                </td>\n                </tr>\n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nfunction SendReplacement()\n{\n    return (\n        <div>\n            <h5>Choose a slot</h5>\n            <SchTable />\n        </div>\n    )\n}\n\nexport default SendReplacement;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/editProfile.jsx",["271"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\n\nfunction EditProfile (){\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Container>\n       <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"First name\"\n            \n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Last name\"\n            \n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n          <Form.Label>Username</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              aria-describedby=\"inputGroupPrepend\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please choose a username.\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n          <Form.Label>City</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"City\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid city.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n          <Form.Label>State</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"State\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid state.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n          <Form.Label>Zip</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Zip\" required />\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid zip.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Form.Row>\n      <Form.Group>\n        <Form.Check\n          required\n          label=\"Agree to terms and conditions\"\n          feedback=\"You must agree before submitting.\"\n        />\n      </Form.Group>\n      <Button type=\"submit\">Submit form</Button>\n    </Form>\n\n     </Container>\n     );\n}\n\nexport default EditProfile;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/Attendance.jsx",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/locations.jsx",["272","273","274","275"],"import React, { Component } from \"react\";\nimport { Container, Jumbotron , Table} from \"react-bootstrap\";\nimport * as locationsService from \"../components/locations/locationsService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass Locations extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        locList: [],\n        user: JSON.parse(localStorage.getItem(\"user\")),\n        isHR: false\n    };\n\n    this.onDeleteLocation = this.onDeleteLocation.bind(this);\n    this.onModify = this.onModify.bind(this);\n\n  }\n\n\n  componentDidMount() {\n\n    this.setState({\n        isHR: this.state.user.role == \"HR\"\n    })\n    //get all locations\n    locationsService.getLocations().then((res) => {\n      this.setState({ locList: res });\n    })\n    .catch(err => {\n        toast.error(\"failed to load locations\");\n    });\n  }\n\n  onDeleteLocation(location, index){\n    locationsService.deleteLocation(location)\n    .then(res => {\n        var elem = document.getElementById(\"row\" + index);\n        elem.parentNode.removeChild(elem);\n\n        toast.success(res);\n    })\n    .catch(err => {\n        if(err.response.data.msg)\n            toast.error(err.response.data.msg);\n        else\n            toast.error(err.response.data);\n    });\n  };\n\n  onModify(location){\n    getHistory().push({\n        pathname: \"/updateLocation\",\n        state: { oldname: location }\n    })\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron>\n          <Container>\n            <h1>Locations</h1>\n            <p>\n              On this page, you can view all the available locations on campus.\n            </p>\n          </Container>\n        </Jumbotron>\n        <Table striped bordered hover>\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Location</th>\n      <th>Type</th>\n      <th>Capacity</th>\n      <th>Taken seats</th>\n      {this.state.isHR && <th>Actions</th>}\n    </tr>\n  </thead>\n  <tbody>\n    {this.state.locList.map((location, index) => {\n        return (<tr id={\"row\" + index}>\n        <td className=\"text-center\">{index}</td>\n        <td className=\"text-center\">{location.name}</td>\n        <td className=\"text-center\">{location.type.toUpperCase()}</td>\n        <td className=\"text-center\">{location.capacity}</td>\n        <td className=\"text-center\">{location.currentlyTakenSeats}</td>\n        {this.state.isHR && \n        \n        <th>\n            <center>\n            <a className=\"btn btn-primary m-3\" onClick={() => {this.onModify(location.name)}} role=\"button\">\n            Modify\n            </a>\n\n            <a className=\"btn btn-primary btn-danger\" role=\"button\" onClick={() => {this.onDeleteLocation(location.name, index)}}>\n            Delete\n            </a>\n            </center>\n            \n        </th>}\n    </tr>\n    )\n    })}\n    \n  </tbody>\n</Table>\n{ this.state.isHR &&\n(<a className=\"btn btn-primary btn-success\" href=\"/addLocation\" role=\"button\"> Add Location</a>)}\n      </Container>\n    );\n  }\n}\n\nexport default Locations;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateLocation.jsx",["276","277","278","279","280","281","282"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as locationsService from \"../components/locations/locationsService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass UpdateLocation extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        oldname: this.props.location.state.oldname,\n        name: \"\",\n        capacity: 0,\n        curSeats: 0,\n        type: \"OFFICE\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const newLocation = {\n            name: this.state.name,\n            capacity: this.state.capacity,\n            currentlyTakenSeats: this.state.curSeats, \n            type: this.state.type\n        };\n\n        locationsService.updateLocation(this.state.oldname, newLocation)\n        .then((res) => {\n            toast.success(\"Location \" + this.state.oldname + \" was updated successfully\");\n            getHistory().push('/locations');\n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n\n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"Location\" md=\"4\">\n            <Form.Label>Location</Form.Label>\n            \n            <Form.Control\n                required\n                type=\"text\"\n                placeholder= {this.state.oldname}\n                readOnly\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"New location\" md=\"4\">\n            <Form.Label>New location</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter the location\"\n                onChange= {(event) => { this.state.name = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"Capacity\" md=\"4\">\n            <Form.Label>Capacity</Form.Label>\n            <Form.Control\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"enter the location's capacity\"\n                onChange= {(event) => { this.state.capacity = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"CS\" md=\"4\">\n            <Form.Label>currently occupied seats</Form.Label>\n            <Form.Control\n                type=\"number\"\n                min=\"0\"\n                max = {this.state.capacity}\n                placeholder=\"enter the number of occupied seats\"\n                onChange= {(event) => { this.state.curSeats = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"Type\" md=\"6\">\n            <Form.Label>Type</Form.Label>\n            <Form.Control\n             placeholder=\"select location type\" \n             as=\"select\"\n             multiple\n             onChange= {(event) => { this.state.type = event.target.value }}\n            >\n                <option>OFFICE</option>\n                <option>HALL</option>\n                <option>LAB</option>\n                <option>TUTORIAL</option>\n            </Form.Control>\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please select a type.\n            </Form.Control.Feedback>\n            </Form.Group>\n        </Form.Row>\n        <Button type=\"submit\">Update location</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default UpdateLocation;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addLocation.jsx",["283","284","285","286","287","288","289"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as locationsService from \"../components/locations/locationsService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass AddLocation extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        name: \"\",\n        capacity: 0,\n        curSeats: 0,\n        type: \"OFFICE\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const newLocation = {\n            name: this.state.name,\n            capacity: this.state.capacity,\n            currentlyTakenSeats: this.state.curSeats, \n            type: this.state.type\n        };\n\n        locationsService.addLocation(newLocation)\n        .then((res) => {\n            toast.success(\"Location \" + newLocation.name + \" was added successfully\");\n            getHistory().push('/locations');\n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"Location\" md=\"4\">\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"enter the location\"\n                onChange= {(event) => { this.state.name = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"Capacity\" md=\"4\">\n            <Form.Label>Capacity</Form.Label>\n            <Form.Control\n                required\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"enter the location's capacity\"\n                onChange= {(event) => { this.state.capacity = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"CS\" md=\"4\">\n            <Form.Label>currently occupied seats</Form.Label>\n            <Form.Control\n                type=\"number\"\n                placeholder=\"enter the number of occupied seats\"\n                defaultValue = {0}\n                min=\"0\"\n                onChange= {(event) => { this.state.curSeats = event.target.value }}\n                required\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n        </Form.Row>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"Type\" md=\"6\">\n            <Form.Label>Type</Form.Label>\n            <Form.Control\n             required  \n             placeholder=\"select location type\" \n             as=\"select\"\n             multiple\n             onChange= {(event) => { this.state.type = event.target.value }}\n            >\n                <option>OFFICE</option>\n                <option>HALL</option>\n                <option>LAB</option>\n                <option>TUTORIAL</option>\n            </Form.Control>\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please select a type.\n            </Form.Control.Feedback>\n            </Form.Group>\n        </Form.Row>\n        <Button type=\"submit\">Add location</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default AddLocation;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addFaculty.jsx",["290","291","292","293"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as facultyService from \"../components/faculties/facultyService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass AddFaculty extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        name: \"\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const newFaculty = this.state.name;\n    \n\n        facultyService.addFaculty(newFaculty)\n        .then((res) => {\n            toast.success(\"faculty \" + newFaculty + \" was added successfully\");\n            getHistory().push('/faculties');\n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"Faculty\" md=\"4\">\n            <Form.Label>Faculty name</Form.Label>\n            <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"enter the faculty's name\"\n                onChange= {(event) => { this.state.name = event.target.value }}\n            />\n            </Form.Group>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Row>\n        <Button type=\"submit\">Add faculty</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default AddFaculty;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateFaculty.jsx",["294","295","296","297"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as facultyService from \"../components/faculties/facultyService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass UpdateFaculty extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        oldname: this.props.location.state.oldname,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const newFaculty = {\n            name: this.state.name,\n        };\n\n        facultyService.updateFaculty(this.state.oldname, newFaculty)\n        .then((res) => {\n            toast.success(\"Faculty \" + this.state.oldname + \" was updated successfully\");\n            getHistory().push('/faculties');\n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"Faculty\" md=\"4\">\n            <Form.Label>Faculty name</Form.Label>\n            <Form.Control\n                required\n                type=\"text\"\n                placeholder= {this.state.oldname}\n                readOnly\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"New faculty\" md=\"4\">\n            <Form.Label>New faculty name</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter the faculty's name\"\n                onChange= {(event) => { this.state.name = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n        </Form.Row>\n        <Button type=\"submit\">Update Faculty</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default UpdateFaculty;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/faculties.jsx",["298","299","300","301"],"import React, { Component } from \"react\";\nimport { Container, Jumbotron , Table} from \"react-bootstrap\";\nimport * as facultyService from \"../components/faculties/facultyService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass Faculties extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        fList: [],\n        user: JSON.parse(localStorage.getItem(\"user\")),\n        isHR: false\n    };\n\n    this.onDeleteFaculty = this.onDeleteFaculty.bind(this);\n    this.onModify = this.onModify.bind(this);\n\n  }\n\n\n  componentDidMount() {\n\n    this.setState({\n        isHR: this.state.user.role == \"HR\"\n    })\n    //get all Faculties\n    facultyService.getFaculties().then((res) => {\n      this.setState({ fList: res });\n    })\n    .catch(err => {\n        toast.error(\"failed to load Faculties\");\n    });\n  }\n\n  onDeleteFaculty(faculty, index){\n    facultyService.deleteFaculty(faculty)\n    .then(res => {\n        var elem = document.getElementById(\"row\" + index);\n        elem.parentNode.removeChild(elem);\n\n        toast.success(res);\n    })\n    .catch(err => {\n        if(err.response.data.msg)\n            toast.error(err.response.data.msg);\n        else\n            toast.error(err.response.data);\n    });\n  };\n\n  onModify(faculty){\n    getHistory().push({\n        pathname: \"/updateFaculty\",\n        state: { oldname: faculty }\n    })\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron>\n          <Container>\n            <h1>Faculties</h1>\n            <p>\n              On this page, you can view all the available Faculties.\n            </p>\n          </Container>\n        </Jumbotron>\n        <Table striped bordered hover>\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Faculty name</th>\n      {this.state.isHR && <th>Actions</th>}\n    </tr>\n  </thead>\n  <tbody>\n    {this.state.fList.map((faculty, index) => {\n        return (<tr id={\"row\" + index}>\n        <td className=\"text-center\">{index}</td>\n        <td className=\"text-center\">{faculty.name}</td>\n        {this.state.isHR && \n        \n        <th>\n            <center>\n            <a className=\"btn btn-primary m-3\" onClick={() => {this.onModify(faculty.name)}} role=\"button\">\n            Modify\n            </a>\n\n            <a className=\"btn btn-primary btn-danger\" role=\"button\" onClick={() => {this.onDeleteFaculty(faculty.name, index)}}>\n            Delete\n            </a>\n            </center>\n            \n        </th>}\n    </tr>\n    )\n    })}\n    \n  </tbody>\n</Table>\n\n{ this.state.isHR &&\n(<a className=\"btn btn-primary btn-success\" href=\"/addfaculty\" role=\"button\"> Add faculty</a>)}\n      </Container>\n    );\n  }\n}\n\nexport default Faculties;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addDepartment.jsx",["302","303","304","305","306"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as departmentService from \"../components/departments/departmentService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass AddDepartment extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        name: \"\",\n        faculty: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const facultyName = this.state.faculty;\n        const newDepartment = this.state.name;\n    \n\n        departmentService.addDepartment(facultyName, newDepartment)\n        .then((res) => {\n            toast.success(\"Department \" + newDepartment + \" was added successfully\");\n            getHistory().push('/departments');\n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n        <Form.Group as={Col} controlId=\"Faculty\" md=\"4\">\n            <Form.Label>Faculty name</Form.Label>\n            <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"enter the faculty under which you want to add your department\"\n                onChange= {(event) => { this.state.faculty = event.target.value }}\n            />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"Department\" md=\"4\">\n            <Form.Label>Department name</Form.Label>\n            <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"enter the Department's name\"\n                onChange= {(event) => { this.state.name = event.target.value }}\n            />\n            </Form.Group>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Row>\n        <Button type=\"submit\">Add Department</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default AddDepartment;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateDepartment.jsx",["307","308","309","310","311"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as departmentService from \"../components/departments/departmentService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass updateDepartment extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        oldname: this.props.location.state.oldname,\n        faculty: this.props.location.state.faculty,\n        HODID: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const newDepartment = {\n            name: this.state.name,\n            HODID: this.state.HODID\n        };\n\n        departmentService.updateDepartment(this.state.faculty, this.state.oldname, newDepartment)\n        .then((res) => {\n            toast.success(\"Department \" + this.state.oldname + \" was updated successfully\");\n            getHistory().push('/departments');\n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"Faculty\" md=\"4\">\n            <Form.Label>Faculty name</Form.Label>\n            <Form.Control\n                \n                type=\"text\"\n                placeholder= {this.state.faculty}\n                readOnly\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"Department\" md=\"4\">\n            <Form.Label>Department name</Form.Label>\n            <Form.Control\n                \n                type=\"text\"\n                placeholder= {this.state.oldname}\n                readOnly\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"New Department\" md=\"4\">\n            <Form.Label>New Department name</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter the Department's name\"\n                onChange= {(event) => { this.state.name = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"HOD\" md=\"4\">\n            <Form.Label>Head of department(HOD) ID</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter the New HOD's ID\"\n                onChange= {(event) => { this.state.HODID = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n        </Form.Row>\n        <Button type=\"submit\">Update department</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default updateDepartment;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addCourse.jsx",["312","313","314","315","316"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as courseService from \"../components/courses/courseService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass AddCourse extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        courseCode: \"\",\n        department: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const department = this.state.department;\n        const newCourse = this.state.courseCode;\n    \n\n        courseService.addCourse(department, newCourse)\n        .then((res) => {\n            toast.success(\"Course \" + newCourse + \" was added successfully\");\n            getHistory().push('/courses');\n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n        <Form.Group as={Col} controlId=\"Faculty\" md=\"4\">\n            <Form.Label>department name</Form.Label>\n            <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"enter the department under which you want to add your course\"\n                onChange= {(event) => { this.state.department = event.target.value }}\n            />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"Course\" md=\"4\">\n            <Form.Label>Course code</Form.Label>\n            <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"enter the course's code\"\n                onChange= {(event) => { this.state.courseCode = event.target.value }}\n            />\n            </Form.Group>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Row>\n        <Button type=\"submit\">Add Course</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default AddCourse;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/courses.jsx",["317","318","319","320","321","322"],"import React, { Component } from \"react\";\nimport { Container, Jumbotron , Table} from \"react-bootstrap\";\nimport * as courseService from \"../components/courses/courseService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass Courses extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        cList: [],\n        user: JSON.parse(localStorage.getItem(\"user\")),\n        isHR: false\n    };\n\n    this.onDeleteCourse = this.onDeleteCourse.bind(this);\n    this.onModify = this.onModify.bind(this);\n\n  }\n\n\n  componentDidMount() {\n\n    this.setState({\n        isHR: this.state.user.role == \"HR\"\n    })\n    //get all Courses\n    courseService.getCourses().then((res) => {\n      this.setState({ cList: res });\n    })\n    .catch(err => {\n        toast.error(\"failed to load Courses\");\n    });\n  }\n\n  onRemoveCourse(index){\n    courseService.removeCourse(this.state.cList[index].department, this.state.cList[index].courseCode)\n    .then(res => {\n        this.state.cList[index].department = \"-\";\n        this.setState({\n            cList: this.state.cList\n        });\n\n        toast.success(res);\n    })\n    .catch(err => {\n        if(err.response.data.msg)\n            toast.error(err.response.data.msg);\n        else\n            toast.error(err.response.data);\n    });\n  };\n\n  onDeleteCourse(courseCode, index){\n    courseService.deleteCourse(courseCode)\n    .then(res => {\n        var elem = document.getElementById(\"row\" + index);\n        elem.parentNode.removeChild(elem);\n\n        toast.success(res);\n    })\n    .catch(err => {\n        if(err.response.data.msg)\n            toast.error(err.response.data.msg);\n        else\n            toast.error(err.response.data);\n    });\n  };\n\n  onModify(department, courseCode){\n    getHistory().push({\n        pathname: \"/updateCourse\",\n        state: { oldname: courseCode, department: department }\n    })\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron>\n          <Container>\n            <h1>Courses</h1>\n            <p>\n              On this page, you can view all the available Courses.\n            </p>\n          </Container>\n        </Jumbotron>\n        <Table striped bordered hover>\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Course code</th>\n      <th>Department name</th>\n      {this.state.isHR && <th>Actions</th>}\n    </tr>\n  </thead>\n  <tbody>\n    {this.state.cList.map((Course, index) => {\n        return (<tr id={\"row\" + index}>\n        <td className=\"text-center\">{index}</td>\n        <td className=\"text-center\">{Course.courseCode}</td>\n        <td className=\"text-center\">{Course.department?Course.department:\"-\"}</td>\n        {this.state.isHR && \n        \n        <th>\n            <center>\n            <a className=\"btn btn-primary m-3\" onClick={() => {this.onModify(Course.department, Course.courseCode)}} role=\"button\">\n            Modify\n            </a>\n\n            <a className=\"btn btn-primary btn-danger m-3\" role=\"button\" onClick={() => {this.onRemoveCourse(index)}}>\n            Remove from department\n            </a>\n\n            <a className=\"btn btn-primary btn-danger\" role=\"button\" onClick={() => {this.onDeleteCourse(Course.courseCode, index)}}>\n            Delete\n            </a>\n            </center>\n            \n        </th>}\n    </tr>\n    )\n    })}\n    \n  </tbody>\n</Table>\n{ this.state.isHR &&\n(<a className=\"btn btn-primary btn-success\" href=\"/addCourse\" role=\"button\"> Add course under department</a>)}\n      </Container>\n    );\n  }\n}\n\nexport default Courses;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateCourse.jsx",["323","324","325","326"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as courseService from \"../components/courses/courseService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass updateCourse extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        oldname: this.props.location.state.oldname,\n        department: this.props.location.state.department,\n        code: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const newCourse = {\n            code: this.state.code,\n        };\n\n        courseService.updateCourse(this.state.department, this.state.oldname, newCourse)\n        .then((res) => {\n            toast.success(\"Course \" + this.state.oldname + \" was updated successfully\");\n            getHistory().push('/courses');\n        })\n        .catch(err => {\n            console.log(err);\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n\n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"Department\" md=\"4\">\n            <Form.Label>Department name</Form.Label>\n            <Form.Control\n                \n                type=\"text\"\n                placeholder= {this.state.department}\n                readOnly\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"Course\" md=\"4\">\n            <Form.Label>Course code</Form.Label>\n            <Form.Control\n                \n                type=\"text\"\n                placeholder= {this.state.oldname}\n                readOnly\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n            <Form.Group as={Col} controlId=\"New course\" md=\"4\">\n            <Form.Label>New course code</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter the course's name\"\n                onChange= {(event) => { this.state.code = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group >\n        </Form.Row>\n        <Button type=\"submit\">Update course</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default updateCourse;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateStaff.jsx",["327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as staffService from \"../components/staffManagement/staffService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass UpdateStaff extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        staffID: this.props.location.state.staffID,\n        email:\"\", \n        name: \"\",\n        gender:\"Male\",\n        leaveBalance: 0,\n        accidentDays: 0,\n        officeLocation:\"\",\n        faculty:\"\",\n        department:\"\",\n        others:\"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const updatedUser = {\n            staffID: this.state.staffID,\n            email: this.state.email, \n            name: this.state.name,\n            gender:this.state.gender,\n            leaveBalance: this.state.leaveBalance,\n            accidentDays: this.state.accidentDays,\n            officeLocation: this.state.officeLocation,\n            faculty: this.state.faculty,\n            department: this.state.department,\n            others: { additionalInfo: this.state.others}\n        };\n\n        staffService.updateStaff(updatedUser)\n        .then((res) => {\n            toast.success(\"User was updated successfully\");\n            getHistory().push('/viewStaff');\n            \n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n\n            <Form.Group as={Col} controlId=\"staffID\" md=\"4\">\n            <Form.Label>staff ID</Form.Label>\n            <Form.Control\n                readOnly\n                type=\"text\"\n                placeholder= {this.state.staffID}\n                onChange= {(event) => { this.state.staffID = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">enter a valid email</Form.Control.Feedback>\n            </Form.Group >\n\n            <Form.Group as={Col} controlId=\"email\" md=\"4\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n                id=\"validationCustom02\"\n                type=\"email\"\n                placeholder=\"enter Email\"\n                onChange= {(event) => { this.state.email = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">enter a valid email</Form.Control.Feedback>\n            </Form.Group >\n\n            <Form.Group as={Col} controlId=\"name\" md=\"4\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter name\"\n                onChange= {(event) => { this.state.name = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            \n            <Form.Group as={Col} controlId=\"gender\" md=\"4\">\n            <Form.Label>Gender</Form.Label>\n            <Form.Control\n             placeholder=\"select a gender\" \n             as=\"select\"\n             multiple\n             onChange= {(event) => { this.state.gender = event.target.value }}\n            >\n                <option>Male</option>\n                <option>Female</option>\n            </Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n        </Form.Row>\n        <Form.Row>\n\n            <Form.Group as={Col} controlId=\"leaveBalance\" md=\"4\">\n            <Form.Label>Leave balance</Form.Label>\n            <Form.Control\n             placeholder=\"select a role\" \n             type=\"number\"\n             step=\".01\"\n             min=\"0\"\n             onChange= {(event) => { this.state.leaveBalance = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"accident days\" md=\"4\">\n            <Form.Label>Accident days</Form.Label>\n            <Form.Control\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"enter accident days\"\n                onChange= {(event) => { this.state.accidentDays = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"office location\" md=\"4\">\n            <Form.Label>Office location</Form.Label>\n            <Form.Control\n             type=\"text\"\n             placeholder=\"enter office location\"\n             onChange= {(event) => { this.state.officeLocation = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n            </Form.Group>\n        </Form.Row>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"faculty\" md=\"4\">\n            <Form.Label>Faculty name</Form.Label>\n            <Form.Control\n             placeholder=\"enter the faculty name\" \n             type=\"text\"\n             onChange= {(event) => { this.state.faculty = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            </Form.Group >\n\n            <Form.Group as={Col} controlId=\"department\" md=\"4\">\n            <Form.Label>Department name</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter the department\"\n                onChange= {(event) => { this.state.department = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n    \n            <Form.Group as={Col} controlId=\"others\" md=\"4\">\n            <Form.Label>Additional info</Form.Label>\n            <Form.Control\n             placeholder=\"any additional info\" \n             type=\"text\"\n             onChange= {(event) => { this.state.others = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            </Form.Group >   \n\n        </Form.Row>\n        <Button type=\"submit\">Update staff member</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default UpdateStaff;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/updateSalary.jsx",["340","341","342","343","344"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as staffService from \"../components/staffManagement/staffService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass UpdateSalary extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        staffID: this.props.location.state.staffID,\n        salary: 0\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const newSalary = this.state.salary;\n\n        staffService.updateSalary(this.state.staffID , newSalary)\n        .then((res) => {\n            toast.success(\"salary was updated successfully\");\n            getHistory().push('/viewStaff');\n            \n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n\n            <Form.Group as={Col} controlId=\"staffID\" md=\"4\">\n            <Form.Label>staff ID</Form.Label>\n            <Form.Control\n                readOnly\n                type=\"text\"\n                placeholder= {this.state.staffID}\n                onChange= {(event) => { this.state.staffID = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">enter a valid email</Form.Control.Feedback>\n            </Form.Group >\n\n            <Form.Group as={Col} controlId=\"salary\" md=\"4\">\n            <Form.Label>New salary</Form.Label>\n            <Form.Control\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"enter salary\"\n                onChange= {(event) => { this.state.salary = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">enter a valid salary</Form.Control.Feedback>\n            </Form.Group >          \n\n        </Form.Row>\n        \n        <Button type=\"submit\">Update salary</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default UpdateSalary;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaff.jsx",["345","346","347","348","349","350","351","352"],"import React, { Component } from \"react\";\nimport { Container, Jumbotron , Table} from \"react-bootstrap\";\nimport * as staffService from \"../components/staffManagement/staffService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass ViewStaff extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        staffList: [],\n        user: JSON.parse(localStorage.getItem(\"user\")),\n        isHR: false\n    };\n\n    this.onDeleteStaff = this.onDeleteStaff.bind(this);\n    this.onModify = this.onModify.bind(this);\n    this.modifySalary = this.modifySalary.bind(this);\n    this.viewAttendance = this.viewAttendance.bind(this);\n    this.addSignInOut = this.addSignInOut.bind(this);\n\n  }\n\n\n  componentDidMount() {\n\n    this.setState({\n        isHR: this.state.user.role == \"HR\"\n    })\n    //get all staff members\n    staffService.getStaff().then((res) => {\n      this.setState({ staffList: res });\n    })\n    .catch(err => {\n        toast.error(\"failed to load staff\");\n    });\n  }\n\n  onDeleteStaff(staffID, index){\n    staffService.deleteStaff(staffID)\n    .then(res => {\n        var elem = document.getElementById(\"row\" + index);\n        elem.parentNode.removeChild(elem);\n\n        toast.success(\"user deleted successfully\");\n    })\n    .catch(err => {\n        if(err.response.data.msg)\n            toast.error(err.response.data.msg);\n        else\n            toast.error(err.response.data);\n    });\n  };\n\n  onModify(staffID){\n    getHistory().push({\n        pathname: \"/updateStaff\",\n        state: { staffID: staffID }\n    })\n  }\n\n  modifySalary(staffID){\n    getHistory().push({\n        pathname: \"/updateSalary\",\n        state: { staffID: staffID }\n    })\n  }\n\n  viewAttendance(staffID){\n    getHistory().push({\n        pathname: \"/viewStaffAttendance\",\n        state: { staffID: staffID }\n    })\n  }\n\n  addSignInOut(staffID){\n    getHistory().push({\n        pathname: \"/addSignInOut\",\n        state: { staffID: staffID }\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron>\n          <Container>\n            <h1>Staff members</h1>\n            <p>\n              On this page, you can view all of the staff members.\n            </p>\n          </Container>\n        </Jumbotron>\n        <Table striped bordered hover>\n  <thead>\n    <tr className=\"text-center\">\n      <th>#</th>\n      <th>Staff ID</th>\n      <th>Role</th>\n      <th>Email</th>\n      <th>Name</th>\n      <th>Day off</th>\n      {this.state.isHR  &&\n       <th>Salary</th>}\n       {this.state.isHR  &&\n       <th>Actions</th>\n       }\n    </tr>\n  </thead>\n  <tbody>\n    {this.state.staffList.map((member, index) => {\n        return (<tr id={\"row\" + index}>\n        <td className=\"text-center\">{index}</td>\n        <td className=\"text-center\">{member.staffID}</td>\n        <td className=\"text-center\">{member.role}</td>\n        <td className=\"text-center\">{member.email}</td>\n        <td className=\"text-center\">{member.name?member.name:\"-\"}</td>\n        <td className=\"text-center\">{member.dayOff?member.dayOff:\"-\"}</td>\n        {this.state.isHR && \n         <td className=\"text-center\">{member.salary?member.salary:0}</td>\n        }\n        { this.state.isHR && \n        <th>\n            <center>\n            <a className=\"btn btn-primary m-2\" onClick={() => {this.onModify(member.staffID)}} role=\"button\">\n            Modify\n            </a>\n\n            <a className=\"btn btn-primary btn-danger m-2\" role=\"button\" onClick={() => {this.onDeleteStaff(member.staffID, index)}}>\n            Delete\n            </a>\n\n            <a className=\"btn btn-primary m-2\" role=\"button\" onClick={() => {this.modifySalary(member.staffID)}}>\n            Change salary\n            </a>\n\n            <a className=\"btn btn-primary m-2\" role=\"button\" onClick={() => {this.viewAttendance(member.staffID)}}>\n            View attendance\n            </a>\n\n            { member.staffID != this.state.user.staffID &&\n            <a className=\"btn btn-primary m-2\" role=\"button\" onClick={() => {this.addSignInOut(member.staffID)}}>\n            Add sign in/out\n            </a>\n            }\n            </center>\n\n            \n        </th>}\n    </tr>\n    )\n    })}\n    \n  </tbody>\n</Table>\n      </Container>\n    );\n  }\n}\n\nexport default ViewStaff;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/newStaff.jsx",["353","354","355","356","357","358","359","360","361","362","363","364","365"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as staffService from \"../components/staffManagement/staffService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\n\nclass AddStaff extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        email:\"\", \n        name: \"\",\n        gender:\"Male\",\n        dayOff:\"\",\n        salary: 0,\n        officeLocation:\"\",\n        faculty:\"\",\n        department:\"\",\n        role:\"\",\n        others:\"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const newUser = {\n            email: this.state.email, \n            name: this.state.name,\n            gender:this.state.gender,\n            dayOff: this.state.dayOff,\n            salary: this.state.salary,\n            officeLocation: this.state.officeLocation,\n            faculty: this.state.faculty,\n            department: this.state.department,\n            role: this.state.role,\n            others: { additionalInfo: this.state.others}\n        };\n\n        staffService.addStaff(newUser)\n        .then((res) => {\n            toast.success(\"User was added successfully\");\n            setTimeout(()=> window.location.reload(), 1000);\n            \n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n\n            <Form.Group as={Col} controlId=\"role\" md=\"4\">\n            <Form.Label>Role*</Form.Label>\n            <Form.Control\n             required  \n             placeholder=\"select a role\" \n             as=\"select\"\n             multiple\n             onChange= {(event) => { this.state.role = event.target.value }}\n            >\n                <option>HR</option>\n                <option>Course Coordinator</option>\n                <option>Course Instructor</option>\n                <option>TA</option>\n                <option>HOD</option>\n            </Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"email\" md=\"4\">\n            <Form.Label>Email*</Form.Label>\n            <Form.Control\n                id=\"validationCustom02\"\n                required\n                type=\"email\"\n                placeholder=\"enter Email\"\n                onChange= {(event) => { this.state.email = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">enter a valid email</Form.Control.Feedback>\n            </Form.Group >\n\n            <Form.Group as={Col} controlId=\"name\" md=\"4\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter name\"\n                onChange= {(event) => { this.state.name = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n        </Form.Row>\n        <Form.Row>\n\n            <Form.Group as={Col} controlId=\"gender\" md=\"4\">\n            <Form.Label>Gender*</Form.Label>\n            <Form.Control\n             required  \n             placeholder=\"select a gender\" \n             as=\"select\"\n             multiple\n             onChange= {(event) => { this.state.gender = event.target.value }}\n            >\n                <option>Male</option>\n                <option>Female</option>\n            </Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"salary\" md=\"4\">\n            <Form.Label>Salary</Form.Label>\n            <Form.Control\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"enter salary\"\n                onChange= {(event) => { this.state.salary = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"office location\" md=\"4\">\n            <Form.Label>Office location</Form.Label>\n            <Form.Control\n             type=\"text\"\n             placeholder=\"enter office location\"\n             onChange= {(event) => { this.state.officeLocation = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n            </Form.Group>\n        </Form.Row>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"faculty\" md=\"4\">\n            <Form.Label>Faculty name</Form.Label>\n            <Form.Control\n             placeholder=\"enter the faculty name\" \n             type=\"text\"\n             onChange= {(event) => { this.state.faculty = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            </Form.Group >\n\n            <Form.Group as={Col} controlId=\"department\" md=\"4\">\n            <Form.Label>Department name</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder=\"enter the department\"\n                onChange= {(event) => { this.state.department = event.target.value }}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"day off\" md=\"4\">\n            <Form.Label>Day off</Form.Label>\n            <Form.Control\n             placeholder=\"select a day\" \n             as=\"select\"\n             multiple\n             onChange= {(event) => { this.state.dayOff = event.target.value }}\n            >\n                <option>Saturday</option>\n                <option>Sunday</option>\n                <option>Monday</option>\n                <option>Tuesday</option>\n                <option>Wednesday</option>\n                <option>Thursday</option>\n            </Form.Control>\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            </Form.Group >   \n            \n            <Form.Group as={Col} controlId=\"others\" md=\"4\">\n            <Form.Label>Additional info</Form.Label>\n            <Form.Control\n             placeholder=\"any additional info\" \n             type=\"text\"\n             onChange= {(event) => { this.state.others = event.target.value }}\n            />\n            <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n            </Form.Group >   \n\n        </Form.Row>\n        <Button type=\"submit\">Add staff member</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default AddStaff;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaffAttendance.jsx",["366","367","368"],"import React, { Component } from \"react\";\nimport { Container, Jumbotron , Table} from \"react-bootstrap\";\nimport * as staffService from \"../components/staffManagement/staffService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass ViewStaffAttendance extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        staffID: this.props.location.state.staffID,\n        attList: [],\n        user: JSON.parse(localStorage.getItem(\"user\")),\n        isHR: false\n    };\n  }\n\n\n  componentDidMount() {\n\n    this.setState({\n        isHR: this.state.user.role == \"HR\"\n    })\n    //get all staff members\n    staffService.getStaffAttendance(this.state.staffID).then((res) => {\n      this.setState({ attList: res });\n    })\n    .catch(err => {\n        toast.error(\"failed to load attendance\");\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron>\n          <Container>\n            <h1>Staff Attendance</h1>\n            <p>\n              On this page, you can view a staff member's attendance records.\n            </p>\n          </Container>\n        </Jumbotron>\n        <Table striped bordered hover>\n  <thead>\n    <tr className=\"text-center\">\n      <th>#</th>\n      <th>Date</th>\n      <th>Sign in</th>\n      <th>Sign out</th>\n    </tr>\n  </thead>\n  <tbody>\n    {this.state.attList.map((date, index) => {\n        return (<tr id={\"row\" + index}>\n        <td className=\"text-center\">{index}</td>\n        <td className=\"text-center\">{date.date}</td>\n        <td className=\"text-center\">{date.signIn.map((signin, index) => {return <li>{signin}</li> })}</td>\n        <td className=\"text-center\">{date.signOut.map((signout, index) => {return <li>{signout}</li> })}</td>\n    </tr>\n    )\n    })}\n    \n  </tbody>\n</Table>\n      </Container>\n    );\n  }\n}\n\nexport default ViewStaffAttendance;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/addSignInOut.jsx",["369","370","371","372","373","374","375"],"import React, { Component, useState} from 'react';\nimport {Form, Col, Button, InputGroup, Container} from 'react-bootstrap';\nimport * as staffService from \"../components/staffManagement/staffService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport getHistory from \"../index\"\n\nclass AddSignInOut extends Component {\n    state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        validated: false,\n        staffID: this.props.location.state.staffID,\n        direction: \"\",\n        dateTime: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n    \n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    else{\n\n        const InOut = {\n            inOut: this.state.direction == \"Sign in\"? \"IN\": \"OUT\",\n            attendanceDateTime: this.state.dateTime\n        }\n\n\n        staffService.addSignInOut(this.state.staffID, InOut)\n        .then((res) => {\n            toast.success(this.state.direction + \" was added successfully\");\n            getHistory().push('/viewStaff');            \n        })\n        .catch(err => {\n            if(err.response.data.msg)\n                toast.error(err.response.data.msg);\n            else\n                toast.error(err.response.data);\n        })\n    }\n\n    this.setState({\n        validated: true\n    });\n    \n  };\n\n  render(){\n    return (\n        <Container>\n        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"StaffID\" md=\"4\">\n            <Form.Label>Staff ID</Form.Label>\n            <Form.Control\n                readOnly\n                type=\"text\"\n                placeholder= {this.state.staffID}\n                onChange= {(event) => { this.state.staffID = event.target.value }}\n            />\n            </Form.Group>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n            <Form.Group as={Col} controlId=\"Direction\" md=\"4\">\n            <Form.Label>Direction</Form.Label>\n            <Form.Control\n             required\n             placeholder=\"select a direction\" \n             as=\"select\"\n             multiple\n             onChange= {(event) => { this.state.direction = event.target.value }}\n            >\n                <option>Sign in</option>\n                <option>Sign out</option>\n            </Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"DateTime\" md=\"4\">\n            <Form.Label>Date and time</Form.Label>\n            <Form.Control\n                required\n                type=\"datetime-local\"\n                onChange= {(event) => { this.state.dateTime = event.target.value }}\n            />\n            </Form.Group>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n\n        </Form.Row>\n        <Button type=\"submit\">Add sign in/out</Button>\n        </Form>\n        </Container>\n        );\n    }\n}\n\nexport default AddSignInOut;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaffMissing.jsx",["376","377","378","379"],"import React, { Component } from \"react\";\nimport { Container, Jumbotron , Table} from \"react-bootstrap\";\nimport * as staffService from \"../components/staffManagement/staffService\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nimport getHistory from \"../index\"\nimport { render } from \"react-dom\";\n\nclass ViewStaffMissing extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        mList: [],\n        isLoaded: false,\n        user: JSON.parse(localStorage.getItem(\"user\")),\n        isHR: false\n    };\n\n    this.loadedPage = this.loadedPage.bind(this);\n    this.loadingScreen = this.loadingScreen.bind(this);\n  }\n\n\n  componentDidMount() {\n\n    this.setState({\n        isHR: this.state.user.role == \"HR\"\n    })\n    //get all staff members\n    staffService.viewMissing().then((res) => {\n        \n        this.setState({\n           mList: res,\n           isLoaded: true\n        });\n    })\n    .catch(err => {\n        toast.error(\"failed to load attendance\");\n    });\n  }\n\n  loadingScreen(){\n    return(\n        <center className=\"mt-3\">\n        <Loader\n           type=\"Puff\"\n           color=\"#00BFFF\"\n           height={80}\n           width={80}\n           timeout={0} //3 secs\n        />\n        <p className=\"mt-2\">Please wait for the table to load</p>\n        </center>\n    );\n  }\n\n  \n\n  loadedPage() {\n    return (\n      <Container>\n        <Jumbotron>\n          <Container>\n            <h1>Missing Hours/Days</h1>\n            <p>\n              On this page, you can view staff members with missing hours/days so far this month.\n            </p>\n          </Container>\n        </Jumbotron>\n        <Table striped bordered hover>\n  <thead>\n    <tr className=\"text-center\">\n      <th>#</th>\n      <th>Staff ID</th>\n      <th>Missing days</th>\n      <th>Missing hours</th>\n    </tr>\n  </thead>\n  <tbody>\n    {this.state.mList.map((member, index) => {\n        return (<tr id={\"row\" + index}>\n        <td className=\"text-center\">{index}</td>\n        <td className=\"text-center\">{member.staffID}</td>\n        <td className=\"text-center\">{member.missingDays}</td>\n        <td className=\"text-center\">{member.missingHours}</td>\n    </tr>\n    )\n    })}\n    \n  </tbody>\n</Table>\n      </Container>\n    );\n  }\n\n  render(){\n      if(this.state.isLoaded){\n          return this.loadedPage();\n      }\n      \n      return this.loadingScreen();\n  }\n}\n\n\nexport default ViewStaffMissing;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewProfile.jsx",["380","381","382","383","384","385"],"import React, { Component } from 'react';\n// import {Carousel, Image, Container, Row, Col, Button} from 'react-bootstrap'\nimport './some-styling.css'\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst axios = require('axios');\naxios.defaults.headers.common['auth-token'] = window.sessionStorage.getItem('token');\n\n\n\nlet resData;\n\n//department?\n//faculty?\n//courses?\n\n\nclass ViewProfile extends Component {\n\n    state = {\n            user: JSON.parse(localStorage.getItem('user')),\n            name: (JSON.parse(localStorage.getItem('user'))).name,\n            email: (JSON.parse(localStorage.getItem('user'))).email,\n            password: (JSON.parse(localStorage.getItem('user'))).password,\n            gender: (JSON.parse(localStorage.getItem('user'))).gender,\n            officeLocation: (JSON.parse(localStorage.getItem('user'))).officeLocation,\n            facultyName: (JSON.parse(localStorage.getItem('user'))).facultyName,\n            departmentName: (JSON.parse(localStorage.getItem('user'))).departmentName,\n            others: (JSON.parse(localStorage.getItem('user'))).others\n    }\n\n\n\n\n  //TODO: Success and fail toast if there's time!\n  handleUpdateProfile = (event) => {\n    const params = this.state.user.role == 'HR' ?  {\n        email: this.state.email,\n        password: this.state.password,\n        gender: this.state.gender,\n        officeLocation: this.state.officeLocation,\n        facultyName: this.state.facultyName,\n        departmentName: this.state.departmentName\n      } : \n      {\n        email: this.state.email,\n        password: this.state.password,\n        gender: this.state.gender,\n        officeLocation: this.state.officeLocation,\n       \n      } ;\n    axios\n      .put(\"http://localhost:4000/staff/updateprofile\", {\n        headers: {\n          'auth-token': localStorage.getItem('token') \n        }\n      })\n      .then(function (response) {\n        toast.success(\"Profile Updated\");\n        this.handleViewProfile();\n\n\n      })\n      .catch(function (error) {\n        // handle error\n        toast.error(\"Profile Update failed\");\n\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n\n  \n\n    \nhandleViewProfile(event){\n\n    axios.get('http://localhost:4000/staff/myprofile', {headers: {\n        'auth-token': localStorage.getItem('token') \n      }\n    }\n      )\n      .then(function (response) {\n        // handle success\n        console.log(\"view profile works\");\n        console.log(response.data);\n        resData = response.data;\n        localStorage.setItem(\"user\", response.data)\n      })\n\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }\n\n  handleChange (evt, field) {\n    \n    this.setState({ [field]: evt.target.value });\n  }\n\n\n    render() { \n        this.handleViewProfile();\n        \n\n        return ( \n          <div className=\"container\">\n          <div className=\"row justify-content-center\">\n              <div className=\"col-12 col-lg-10 col-xl-8 mx-auto\">\n                  <div className=\"my-4\">\n                     <form>\n                          <div className=\"row mt-5 align-items-center\">\n                              <div className=\"col-md-3 text-center mb-5\">\n                                  <div className=\"avatar avatar-xl\">\n                                      <img src=\"https://img.icons8.com/cute-clipart/64/000000/user-male.png\" alt=\"...\" className=\"avatar-img rounded-circle\" />\n                                  </div>\n                              </div>\n                              <div className=\"col\">\n                                  <div className=\"row align-items-center\">\n                                      <div className=\"col-md-7\">\n                                          {/*TODO: placeholder. put the name of the current user here!! */}\n                                          <h4 className=\"mb-1\">{this.state.user.name}</h4>\n                                          <p className=\"small mb-3\"><span className=\"badge badge-dark\">{this.state.user.officeLocation}</span></p>\n                                      </div>\n                                  </div>\n                                  <div className=\"row mb-4\">\n                                      <div className=\"col-md-7\">\n                                          <p className=\"text-muted\">\n                                              {/*TODO: placeholder. put the role of the current user here!! */}\n                                              {this.state.user.departmentName}, {this.state.user.facultyName}\n                                          </p>\n                                      </div>\n                                      <div className=\"col\">\n                                          <p className=\"small mb-0 text-muted\">{this.state.user.salary} NET</p>\n                                          <p className=\"small mb-0 text-muted\">{this.state.user.email}</p>\n                                          <p className=\"small mb-0 text-muted\">ID: {this.state.user.staffID}</p>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                          <hr className=\"my-4\" />\n                         {/** TODO: placeholders all over this page!!!! */}\n                          <div className=\"form-row\">\n                              <div className=\"form-group col-md-6\">\n                                  <label htmlFor=\"name\">Name</label>\n                                  <input type=\"text\" id=\"name\" className=\"form-control\" placeholder=\"Your name\" value={this.state.name} onChange={(event)=>this.handleChange(event, \"name\")} />\n                              </div>\n                              <div className=\"form-group col-md-6\">\n                              <label htmlFor=\"gender\">Gender  </label>\n                                  <select id=\"gender\" className=\"form-control\" onChange={(event)=>this.handleChange(event, \"gender\")}>\n                                  <option defaultValue={this.state.user.gender}>{this.state.user.gender}</option>\n                                  <option value='Male'>Male</option>\n                                  <option value='Female'>Female</option>\n                                  </select>\n                              </div>\n                          </div>\n                          <div className=\"form-group\">\n                              <label htmlFor=\"email\">Email</label>\n                              <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Your email\" valuw={this.state.user.email} onChange={(event)=>this.handleChange(event, \"email\")} />\n                          </div>\n                          <div className=\"form-group\">\n                              <label htmlFor=\"officeLocation\">Office Location</label>\n                              <input type=\"text\" className=\"form-control\" id=\"officeLocation\" placeholder=\"Your office location\" value={this.state.user.officeLocation} onChange={(event)=>this.handleChange(event, \"officeLocation\")}/>\n                          </div>\n                          <div className=\"form-row\">\n                              {this.state.user.role == 'HR' ? <div className=\"form-group col-md-6\">\n                                  <label htmlFor=\"departementName\">Departement Name</label>\n                                  <input type=\"text\" className=\"form-control\" id=\"departementName\" placeholder=\"Your department\" value={this.state.user.departmentName} onChange={(event)=>this.handleChange(event, \"departmentName\")}/>\n                              </div> : <div></div>}\n                              {this.state.user.role == 'HR' ? <div className=\"form-group col-md-4\">\n                              <label htmlFor=\"facultyName\">Faculty Name</label>\n                                  <input type=\"text\" className=\"form-control\" id=\"facultyName\" placeholder=\"Your faculty\" value={this.state.user.facultyName}  onChange={(event)=>this.handleChange(event, \"facultyName\")}/>\n                              </div> : <div></div>}\n            \n                              <div className=\"form-group col-md-2\">\n                                  <label htmlFor=\"others\">Other</label>\n                                  <input type=\"text\" className=\"form-control\" id=\"others\" placeholder=\"Others\" value={this.state.others} onChange={(event)=>this.handleChange(event, \"others\")}/>\n                              </div>\n                          </div>\n                          <hr className=\"my-4\" />\n                          <div className=\"row mb-4\">\n                              <div className=\"col-md-6\">\n                                  {/* <div className=\"form-group\">\n                                      <label htmlFor=\"inputPassword4\">Old Password</label>\n                                      <input type=\"password\" className=\"form-control\" id=\"inputPassword5\" />\n                                  </div> */}\n                                  <div className=\"form-group\">\n                                      <label htmlFor=\"password\">New Password</label>\n                                      <input type=\"password\" className=\"form-control\" id=\"password\" />\n                                  </div>\n                                  {/* <div className=\"form-group\">\n                                      <label htmlFor=\"password\">Confirm Password</label>\n                                      <input type=\"password\" className=\"form-control\" id=\"password\" />\n                                  </div> */}\n                              </div>\n                              <div className=\"col-md-6\">\n                                  <p className=\"mb-2\">Password requirements</p>\n                                  <p className=\"small text-muted mb-2\">To create a new password, you have to meet all of the following requirements:</p>\n                                  <ul className=\"small text-muted pl-4 mb-0\">\n                                      <li>Minimum 8 character</li>\n                                      <li>At least one special character</li>\n                                      <li>At least one number</li>\n                                      <li>Can’t be the same as a previous password</li>\n                                  </ul>\n                              </div>\n                          </div>\n                          <div>\n                            {/* <EditProfile/> */}\n                          </div>\n                          <button onClick={this.handleUpdateProfile} className=\"btn btn-primary\">Save Change</button>\n                      </form>\n                  </div>\n              </div>\n          </div>\n          \n          </div>         );\n    }\n}\n \nexport default ViewProfile;","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/schedule.jsx",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402"],"import React, { Component } from \"react\";\nimport \"./schedule.css\";\n\nclass Schedule extends Component {\n  state = {\n    text: \"Schedule\",\n    arr: [\n      {\n        day: \"mon\",\n        active: false,\n      },\n      {\n        day: \"tue\",\n        active: false,\n      },\n      {\n        day: \"wed\",\n        active: false,\n      },\n      {\n        day: \"thu\",\n        active: false,\n      },\n      {\n        day: \"fri\",\n        active: false,\n      },\n      {\n        day: \"sat\",\n        active: false,\n      },\n      {\n        day: \"sun\",\n        active: false,\n      },\n    ],\n    schedule: [],\n  };\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(day) {\n    if (day != null) {\n      let tmp = this.state.arr;\n      tmp[day].active = true;\n      for (let i = 0; i < tmp.length; i++) {\n        if (i == day) tmp[day].active = true;\n        else tmp[i].active = false;\n      }\n      this.setState({\n        arr: tmp,\n      });\n      console.log(this.props);\n\n      let schedule = this.props.location\n        ? this.props.location.state\n        : this.props.location;\n      if (!schedule) {\n        schedule = this.props.staff.schedule;\n        if (this.props.staff.text)\n          this.setState({ text: this.props.staff.text });\n      }\n      console.log(schedule);\n      let cur;\n      if (day == 4)\n        cur = {\n          first: \"Free\",\n          second: \"Free\",\n          third: \"Free\",\n          fourth: \"Free\",\n          fifth: \"Free\",\n        };\n      else cur = schedule[this.state.arr[day].day.toLowerCase()];\n      if (cur) {\n        let data = [];\n        Object.keys(cur).map((currentSlot) => {\n          let currentSlotValue = cur[currentSlot];\n          data.push(\n            <div className=\"col-md-6\">\n              <div className=\"timetable-item\">\n                <div className=\"timetable-item-img\">\n                  <img\n                    src=\"https://via.placeholder.com/100x80/FFB6C1/000000\"\n                    alt=\"CS4\"\n                  />\n                </div>\n                <div className=\"timetable-item-main\">\n                  <div className=\"timetable-item-time\">{currentSlot}</div>\n                  <div className=\"timetable-item-name\">\n                    {currentSlotValue === \"Free\"\n                      ? currentSlotValue\n                      : currentSlotValue.course.courseCode}\n                  </div>{\" \"}\n                  <div className=\"timetable-item-name\">\n                    {currentSlotValue === \"Free\"\n                      ? \"\"\n                      : currentSlotValue.location\n                      ? currentSlotValue.location.name\n                      : \"\"}\n                  </div>\n                  <div className=\"timetable-item-like\">\n                    <i className=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\n                    <i className=\"fa fa-heart\" aria-hidden=\"true\"></i>\n                    <div className=\"timetable-item-like-count\">11</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        });\n        this.setState({ schedule: data });\n      }\n    }\n  }\n  render() {\n    return (\n      <div className=\"idance\">\n        <div className=\"schedule content-block\">\n          <div className=\"container\">\n            <h2 data-aos=\"zoom-in-up\" className=\"aos-init aos-animate\">\n              {this.state.text}\n            </h2>\n            <div>\n              Note: Please click on the table headers to access the schedule of\n              each day !\n            </div>\n\n            <div className=\"timetable\">\n              <nav className=\"nav nav-tabs\">\n                <a\n                  className={\n                    this.state.arr[0].active == true\n                      ? \"nav-link text-primary active\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.handleClick(0)}\n                >\n                  Mon\n                </a>\n                <a\n                  className={\n                    this.state.arr[1].active == true\n                      ? \"nav-link text-primary active\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.handleClick(1)}\n                >\n                  Tue\n                </a>\n                <a\n                  className={\n                    this.state.arr[2].active == true\n                      ? \"nav-link text-primary active\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.handleClick(2)}\n                >\n                  Wed\n                </a>\n                <a\n                  className={\n                    this.state.arr[3].active == true\n                      ? \"nav-link text-primary active\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.handleClick(3)}\n                >\n                  Thu\n                </a>\n                <a\n                  className={\n                    this.state.arr[4].active == true\n                      ? \"nav-link text-primary active\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.handleClick(4)}\n                >\n                  Fri\n                </a>\n                <a\n                  className={\n                    this.state.arr[5].active == true\n                      ? \"nav-link text-primary active\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.handleClick(5)}\n                >\n                  Sat\n                </a>\n                <a\n                  className={\n                    this.state.arr[6].active == true\n                      ? \"nav-link text-primary active\"\n                      : \"nav-link\"\n                  }\n                  onClick={() => this.handleClick(6)}\n                >\n                  Sun\n                </a>\n              </nav>\n\n              <div className=\"tab-content\">\n                <div className=\"tab-pane show active\">\n                  <div className=\"row\"></div>\n                  {this.state.schedule}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Schedule;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaffRequests.jsx",["403","404","405","406","407","408","409"],"import React, { Component, setState } from \"react\";\nimport {\n  Container,\n  Jumbotron,\n  Button,\n  Table,\n  Col,\n  Form,\n  Modal,\n} from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nimport faker from \"faker\";\nimport SmartDataTable from \"react-smart-data-table\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst axios = require(\"axios\");\naxios.defaults.headers.common[\"auth-token\"] = localStorage.getItem(\"token\");\n\nclass ViewStaffRequests extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChanges = this.handleChanges.bind(this);\n\n    this.state = {\n      show: false,\n      requestID: null,\n      result: [],\n      val: \"\",\n    };\n  }\n\n  async componentWillMount() {\n    var config = {\n      method: \"get\",\n      url: \"http://localhost:4000/hod/viewRequests/\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    };\n    try {\n      let response = await axios(config);\n      this.setState({\n        result: response.data.result,\n      });\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    }\n  }\n  async handleChanges() {\n    let { requestID, val } = this.state;\n    var data = JSON.stringify({\n      data: { requestID },\n    });\n\n    var config = {\n      method: \"post\",\n      url:\n        \"http://localhost:4000/hod/RejectRequest\" +\n        (val ? \"?comment=\" + val : \"\"),\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    try {\n      let response = await axios(config);\n      toast.success(\"Success!\");\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    }\n  }\n  render() {\n    const columns = [\n      {\n        dataField: \"status\",\n        text: \"Status\",\n      },\n      {\n        dataField: \"comment\",\n        text: \"Comments by the HOD\",\n      },\n      {\n        dataField: \"senderID\",\n        text: \"senderID\",\n      },\n      {\n        dataField: \"receiverID\",\n        text: \"receiverID\",\n      },\n      {\n        dataField: \"reason\",\n        text: \"Reason\",\n      },\n      {\n        dataField: \"reasonDetails\",\n        text: \"Reason Details\",\n      },\n      {\n        dataField: \"sentDate\",\n        text: \"sentDate\",\n      },\n      {\n        dataField: \"responseDate\",\n        text: \"replyDate\",\n      },\n      {\n        dataField: \"decision\",\n        text: \"   HOD Decision  \",\n      },\n    ];\n\n    const handleShow = (requestID) => {\n      this.setState({ show: true, requestID });\n    };\n\n    const handleClose = () => {\n      this.setState({ show: false });\n    };\n\n    const handleAccept = async (requestID) => {\n      var data = JSON.stringify({\n        data: { requestID },\n      });\n\n      var config = {\n        method: \"post\",\n        url: \"http://localhost:4000/hod/AcceptRequest\",\n        headers: {\n          \"auth-token\": localStorage.getItem(\"token\"),\n          \"Content-Type\": \"application/json\",\n        },\n        data: data,\n      };\n      console.log(config);\n      try {\n        let response = await axios(config);\n        toast.success(\"Success!\");\n      } catch (error) {\n        toast.error(error.response.data.msg);\n      }\n    };\n    let data = [];\n    this.state.result.map((request) => {\n      let { leave, dayOff, replacement, linkingSlot } = request;\n      let reason;\n      let reasonDetails;\n      if (leave) {\n        reason = \"leave\";\n        reasonDetails = leave;\n      }\n      if (dayOff) {\n        reason = \"dayOff\";\n        reasonDetails = dayOff;\n      }\n      if (replacement) {\n        reason = \"replacement\";\n        reasonDetails = replacement;\n      }\n      if (linkingSlot) {\n        reason = \"linkingSlot\";\n        reasonDetails = linkingSlot;\n      }\n      let decision = (\n        <Col>\n          <Button varient=\"success\" onClick={() => handleAccept(request._id)}>\n            Accept\n          </Button>{\" \"}\n          <Button onClick={() => handleShow(request._id)} variant=\"danger\">\n            Reject\n          </Button>\n        </Col>\n      );\n      reasonDetails = !reasonDetails\n        ? null\n        : Object.keys(reasonDetails).map((key, i) => (\n            <p key={i}>\n              <span> {key}</span>\n              <span> {reasonDetails[key]}</span>\n            </p>\n          ));\n      data.push({ ...request, reasonDetails, reason, decision });\n    });\n    console.log(data);\n\n    return (\n      <Container>\n        <ToastContainer />\n\n        <Jumbotron>\n          <h1>Staff Requests!</h1>\n          <p>\n            Here you can see, accept or refuse staff requests\n            {this.state.persons}\n          </p>\n        </Jumbotron>\n\n        <Modal show={this.state.show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Enter your reject message</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              {\" \"}\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Response</Form.Label>\n                <Form.Control\n                  value={this.state.val}\n                  onChange={(e) => this.setState({ val: e.target.value })}\n                  type=\"text\"\n                  placeholder=\"Enter ur response\"\n                />\n                <Form.Text className=\"text-muted\">\n                  Response will be viewd by the staff.\n                </Form.Text>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={() => this.handleChanges()}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <BootstrapTable keyField=\"id\" data={data} columns={columns} />\n      </Container>\n    );\n  }\n}\n\nexport default ViewStaffRequests;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/departments.jsx",["410","411","412","413","414","415"],"import React, { Component } from \"react\";\nimport { Container, Jumbotron, Table } from \"react-bootstrap\";\nimport * as departmentService from \"../components/departments/departmentService\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport getHistory from \"../index\";\n\nclass Departments extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dList: [],\n      user: JSON.parse(localStorage.getItem(\"user\")),\n      isHR: false,\n    };\n\n    this.onDeleteDepartment = this.onDeleteDepartment.bind(this);\n    this.onModify = this.onModify.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isHR: this.state.user.role == \"HR\",\n    });\n    //get all Departments\n    departmentService\n      .getDepartments()\n      .then((res) => {\n        this.setState({ dList: res });\n      })\n      .catch((err) => {\n        toast.error(\"failed to load Departments\");\n      });\n  }\n\n  onRemoveDepartment(index) {\n    departmentService\n      .removeDepartment(\n        this.state.dList[index].name,\n        this.state.dList[index].faculty\n      )\n      .then((res) => {\n        this.state.dList[index].faculty = \"-\";\n        this.setState({\n          dList: this.state.dList,\n        });\n\n        toast.success(res);\n      })\n      .catch((err) => {\n        if (err.response.data.msg) toast.error(err.response.data.msg);\n        else toast.error(err.response.data);\n      });\n  }\n\n  onDeleteDepartment(Department, index) {\n    departmentService\n      .deleteDepartment(Department)\n      .then((res) => {\n        var elem = document.getElementById(\"row\" + index);\n        elem.parentNode.removeChild(elem);\n\n        toast.success(res);\n      })\n      .catch((err) => {\n        if (err.response.data.msg) toast.error(err.response.data.msg);\n        else toast.error(err.response.data);\n      });\n  }\n\n  onModify(Department, faculty) {\n    getHistory().push({\n      pathname: \"/updateDepartment\",\n      state: { oldname: Department, faculty: faculty },\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron>\n          <Container>\n            <h1>Departments</h1>\n            <p>On this page, you can view all the available Departments.</p>\n          </Container>\n        </Jumbotron>\n\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Department name</th>\n              <th>Faculty name</th>\n              <th>Head of department(HOD) ID</th>\n              {this.state.isHR && <th>Actions</th>}\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.dList.map((Department, index) => {\n              return (\n                <tr id={\"row\" + index}>\n                  <td className=\"text-center\">{index}</td>\n                  <td className=\"text-center\">{Department.name}</td>\n                  <td className=\"text-center\">\n                    {Department.faculty ? Department.faculty : \"-\"}\n                  </td>\n                  <td className=\"text-center\">\n                    {Department.hodStaffID ? Department.hodStaffID : \"-\"}\n                  </td>\n                  {this.state.isHR && (\n                    <th>\n                      <center>\n                        <a\n                          className=\"btn btn-primary m-3\"\n                          onClick={() => {\n                            this.onModify(Department.name, Department.faculty);\n                          }}\n                          role=\"button\"\n                        >\n                          Modify\n                        </a>\n\n                        <a\n                          className=\"btn btn-primary btn-danger m-3\"\n                          role=\"button\"\n                          onClick={() => {\n                            this.onRemoveDepartment(index);\n                          }}\n                        >\n                          Remove from faculty\n                        </a>\n\n                        <a\n                          className=\"btn btn-primary btn-danger\"\n                          role=\"button\"\n                          onClick={() => {\n                            this.onDeleteDepartment(Department.name, index);\n                          }}\n                        >\n                          Delete\n                        </a>\n                      </center>\n                    </th>\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        {this.state.isHR && (\n          <a\n            className=\"btn btn-primary btn-success\"\n            href=\"/addDepartment\"\n            role=\"button\"\n          >\n            {\" \"}\n            Add department under faculty\n          </a>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default Departments;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/util/parseSchedule.js",["416","417","418","419","420","421"],"export function parseSchedule(schedule) {\n  try {\n    let sat = new Object();\n    let sun = new Object();\n    let mon = new Object();\n    let tue = new Object();\n    let wed = new Object();\n    let thu = new Object();\n\n    //sort the schedule\n    schedule.forEach((slot) => {\n      if (slot.weekday === \"Saturday\") {\n        if (slot.number === \"First\") {\n          sat.first = slot;\n        } else if (slot.number === \"Second\") {\n          sat.second = slot;\n        } else if (slot.number === \"Third\") {\n          sat.third = slot;\n        } else if (slot.number === \"Fourth\") {\n          sat.fourth = slot;\n        } else if (slot.number === \"Fifth\") {\n          sat.fifth = slot;\n        }\n      } else if (slot.weekday === \"Sunday\") {\n        if (slot.number === \"First\") {\n          sun.first = slot;\n        } else if (slot.number === \"Second\") {\n          sun.second = slot;\n        } else if (slot.number === \"Third\") {\n          sun.third = slot;\n        } else if (slot.number === \"Fourth\") {\n          sun.fourth = slot;\n        } else if (slot.number === \"Fifth\") {\n          sun.fifth = slot;\n        }\n      } else if (slot.weekday === \"Monday\") {\n        if (slot.number === \"First\") {\n          mon.first = slot;\n        } else if (slot.number === \"Second\") {\n          mon.second = slot;\n        } else if (slot.number === \"Third\") {\n          mon.third = slot;\n        } else if (slot.number === \"Fourth\") {\n          mon.fourth = slot;\n        } else if (slot.number === \"Fifth\") {\n          mon.fifth = slot;\n        }\n      } else if (slot.weekday === \"Tuesday\") {\n        if (slot.number === \"First\") {\n          tue.first = slot;\n        } else if (slot.number === \"Second\") {\n          tue.second = slot;\n        } else if (slot.number === \"Third\") {\n          tue.third = slot;\n        } else if (slot.number === \"Fourth\") {\n          tue.fourth = slot;\n        } else if (slot.number === \"Fifth\") {\n          tue.fifth = slot;\n        }\n      } else if (slot.weekday === \"Wednesday\") {\n        if (slot.number === \"First\") {\n          wed.first = slot;\n        } else if (slot.number === \"Second\") {\n          wed.second = slot;\n        } else if (slot.number === \"Third\") {\n          wed.third = slot;\n        } else if (slot.number === \"Fourth\") {\n          wed.fourth = slot;\n        } else if (slot.number === \"Fifth\") {\n          wed.fifth = slot;\n        }\n      } else if (slot.weekday === \"Thursday\") {\n        if (slot.number === \"First\") {\n          thu.first = slot;\n        } else if (slot.number === \"Second\") {\n          thu.second = slot;\n        } else if (slot.number === \"Third\") {\n          thu.third = slot;\n        } else if (slot.number === \"Fourth\") {\n          thu.fourth = slot;\n        } else if (slot.number === \"Fifth\") {\n          thu.fifth = slot;\n        }\n      }\n    });\n\n    //fill empty slots\n    if (!sat.first) sat.first = \"Free\";\n    if (!sat.second) sat.second = \"Free\";\n    if (!sat.third) sat.third = \"Free\";\n    if (!sat.fourth) sat.fourth = \"Free\";\n    if (!sat.fifth) sat.fifth = \"Free\";\n\n    if (!sun.first) sun.first = \"Free\";\n    if (!sun.second) sun.second = \"Free\";\n    if (!sun.third) sun.third = \"Free\";\n    if (!sun.fourth) sun.fourth = \"Free\";\n    if (!sun.fifth) sun.fifth = \"Free\";\n\n    if (!mon.first) mon.first = \"Free\";\n    if (!mon.second) mon.second = \"Free\";\n    if (!mon.third) mon.third = \"Free\";\n    if (!mon.fourth) mon.fourth = \"Free\";\n    if (!mon.fifth) mon.fifth = \"Free\";\n\n    if (!tue.first) tue.first = \"Free\";\n    if (!tue.second) tue.second = \"Free\";\n    if (!tue.third) tue.third = \"Free\";\n    if (!tue.fourth) tue.fourth = \"Free\";\n    if (!tue.fifth) tue.fifth = \"Free\";\n\n    if (!wed.first) wed.first = \"Free\";\n    if (!wed.second) wed.second = \"Free\";\n    if (!wed.third) wed.third = \"Free\";\n    if (!wed.fourth) wed.fourth = \"Free\";\n    if (!wed.fifth) wed.fifth = \"Free\";\n\n    if (!thu.first) thu.first = \"Free\";\n    if (!thu.second) thu.second = \"Free\";\n    if (!thu.third) thu.third = \"Free\";\n    if (!thu.fourth) thu.fourth = \"Free\";\n    if (!thu.fifth) thu.fifth = \"Free\";\n\n    //add the days together into one object as the  whole schedule\n    const sch = { sat: sat, sun: sun, mon: mon, tue: tue, wed: wed, thu: thu };\n    //return the schedule\n    return sch;\n  } catch (error) {\n    throw Error(error.message);\n  }\n}\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/locations/locationsService.js",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/staffManagement/staffService.js",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/views/viewStaffProfiles.jsx",["422","423","424","425","426","427","428","429","430","431","432","433"],"import React, { Component, useRef } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport getHistory from \"../index\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\n\nimport {\n  Form,\n  Button,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n} from \"react-bootstrap\";\nimport { parseSchedule } from \"../util/parseSchedule\";\nimport Schedule from \"./schedule\";\n\nexport class ViewProfiles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { radio: \"\", schedule: null };\n    this.handleSchedule = this.handleSchedule.bind(this);\n  }\n  onChange(value, index) {\n    //  console.log(value, index);\n  }\n  setValue(event) {\n    this.setState({ radio: event.target.value });\n  }\n  handleSchedule(scheduleProp) {\n    this.setState({\n      schedule: scheduleProp,\n    });\n  }\n\n  render() {\n    if (this.state.schedule != null) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/schedule\",\n            state: this.state.schedule,\n          }}\n        />\n      );\n    }\n\n    /*   const data = [\n      { id: 1, name: \"Gob\", value: \"2\" },\n      {\n        id: (\n          <div onChange={this.setGender.bind(this)}>\n            <input type=\"radio\" value=\"MALE\" name=\"gender\" /> Male\n          </div>\n        ),\n        name: \"Buster\",\n        value: \"5\",\n      },\n      {\n        id: (\n          <div onChange={this.setGender.bind(this)}>\n            <input type=\"radio\" value=\"F\" name=\"gender\" /> F\n          </div>\n        ),\n        name: \"George Michael\",\n        value: \"4\",\n      },\n    ]; */\n    const columns = [\n      {\n        dataField: \"staffID\",\n        text: \"Staff Id\",\n      },\n      {\n        dataField: \"name\",\n        text: \"Name\",\n      },\n      {\n        dataField: \"gender\",\n        text: \"Gender\",\n      },\n\n      {\n        dataField: \"role\",\n        text: \"Role\",\n      },\n      {\n        dataField: \"email\",\n        text: \"Email\",\n      },\n      {\n        dataField: \"dayOff\",\n        text: \"Day-off\",\n      },\n      {\n        dataField: \"leaveBalance\",\n        text: \"Leave Balance\",\n      },\n      {\n        dataField: \"accidentDays\",\n        text: \"Accident Days\",\n      },\n      {\n        dataField: \"salaryDeduction\",\n        text: \"Salary Deduction\",\n      },\n\n      {\n        dataField: \"salary\",\n        text: \"Salary\",\n      },\n      {\n        dataField: \"facultyID\",\n        text: \"Faculty\",\n      },\n      {\n        dataField: \"departmentID\",\n        text: \"Department\",\n      },\n      {\n        dataField: \"others\",\n        text: \"Others\",\n      },\n      {\n        dataField: \"courseIDs\",\n        text: \"Courses Ids\",\n      },\n\n      /*     {\n        dataField: \"attendance\",\n        text: \"Attendance\",\n      }, */\n      {\n        dataField: \"schedule\",\n        text: \"Schedule\",\n      },\n    ];\n    let data = [];\n\n    this.props.staff.staff.map((el) => {\n      let id = (\n        <div onChange={this.setValue.bind(this)}>\n          <input type=\"radio\" value={el.staffID} name=\"staffID\" />\n          {el.staffID}\n        </div>\n      );\n      let courses = el.courseIDs.map((course) => {\n        return <div>{`\"` + course + `\"`}</div>;\n      });\n\n      let schedule = el.schedule;\n      schedule = parseSchedule(schedule);\n      let schedule2 = (\n        <a class=\"btn btn-info\" onClick={() => this.handleSchedule(schedule)}>\n          Info\n        </a>\n      );\n\n      data.push({\n        ...el,\n        staffID: id,\n        schedule: schedule2,\n        courseIDs: courses,\n      });\n    });\n    return (\n      <div className=\"App\">\n        <p className=\"Table-header\">Staff Profile</p>\n\n        <BootstrapTable keyField=\"id\" data={data} columns={columns} />\n      </div>\n    );\n    /*  return (\n      <div>\n        <h1>12</h1>\n      </div>\n    ); */\n  }\n}\n\nexport default ViewProfiles;\n","/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/cards/cards.jsx",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/footer/footer.jsx",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/departments/departmentService.js",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/courses/courseService.js",[],"/Users/lemonpudding/Documents/java script files/guc-portal/client/src/components/faculties/facultyService.js",[],{"ruleId":"434","severity":1,"message":"435","line":6,"column":25,"nodeType":"436","messageId":"437","endLine":6,"endColumn":35},{"ruleId":"434","severity":1,"message":"438","line":8,"column":10,"nodeType":"436","messageId":"437","endLine":8,"endColumn":23},{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","replacedBy":"442"},{"ruleId":"443","severity":1,"message":"444","line":35,"column":17,"nodeType":"445","endLine":35,"endColumn":57},{"ruleId":"443","severity":1,"message":"444","line":38,"column":21,"nodeType":"445","endLine":38,"endColumn":61},{"ruleId":"443","severity":1,"message":"444","line":39,"column":21,"nodeType":"445","endLine":39,"endColumn":111},{"ruleId":"443","severity":1,"message":"444","line":40,"column":21,"nodeType":"445","endLine":40,"endColumn":111},{"ruleId":"443","severity":1,"message":"444","line":42,"column":17,"nodeType":"445","endLine":42,"endColumn":57},{"ruleId":"434","severity":1,"message":"446","line":3,"column":5,"nodeType":"436","messageId":"437","endLine":3,"endColumn":10},{"ruleId":"447","severity":1,"message":"448","line":156,"column":8,"nodeType":"449","endLine":156,"endColumn":10,"suggestions":"450"},{"ruleId":"434","severity":1,"message":"451","line":1,"column":39,"nodeType":"436","messageId":"437","endLine":1,"endColumn":48},{"ruleId":"434","severity":1,"message":"452","line":7,"column":3,"nodeType":"436","messageId":"437","endLine":7,"endColumn":12},{"ruleId":"434","severity":1,"message":"453","line":8,"column":3,"nodeType":"436","messageId":"437","endLine":8,"endColumn":9},{"ruleId":"434","severity":1,"message":"454","line":9,"column":3,"nodeType":"436","messageId":"437","endLine":9,"endColumn":8},{"ruleId":"434","severity":1,"message":"455","line":10,"column":3,"nodeType":"436","messageId":"437","endLine":10,"endColumn":6},{"ruleId":"434","severity":1,"message":"456","line":12,"column":3,"nodeType":"436","messageId":"437","endLine":12,"endColumn":8},{"ruleId":"434","severity":1,"message":"457","line":13,"column":3,"nodeType":"436","messageId":"437","endLine":13,"endColumn":10},{"ruleId":"434","severity":1,"message":"458","line":15,"column":8,"nodeType":"436","messageId":"437","endLine":15,"endColumn":15},{"ruleId":"434","severity":1,"message":"459","line":22,"column":5,"nodeType":"436","messageId":"437","endLine":22,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":127,"column":35,"nodeType":"462","messageId":"463","endLine":127,"endColumn":37},{"ruleId":"464","severity":1,"message":"465","line":293,"column":11,"nodeType":"445","endLine":305,"endColumn":12},{"ruleId":"434","severity":1,"message":"446","line":3,"column":5,"nodeType":"436","messageId":"437","endLine":3,"endColumn":10},{"ruleId":"434","severity":1,"message":"466","line":1,"column":17,"nodeType":"436","messageId":"437","endLine":1,"endColumn":25},{"ruleId":"434","severity":1,"message":"451","line":1,"column":27,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"467","line":11,"column":3,"nodeType":"436","messageId":"437","endLine":11,"endColumn":7},{"ruleId":"434","severity":1,"message":"468","line":183,"column":11,"nodeType":"436","messageId":"437","endLine":183,"endColumn":22},{"ruleId":"434","severity":1,"message":"469","line":188,"column":11,"nodeType":"436","messageId":"437","endLine":188,"endColumn":24},{"ruleId":"434","severity":1,"message":"451","line":1,"column":39,"nodeType":"436","messageId":"437","endLine":1,"endColumn":48},{"ruleId":"434","severity":1,"message":"452","line":7,"column":3,"nodeType":"436","messageId":"437","endLine":7,"endColumn":12},{"ruleId":"434","severity":1,"message":"453","line":8,"column":3,"nodeType":"436","messageId":"437","endLine":8,"endColumn":9},{"ruleId":"434","severity":1,"message":"454","line":9,"column":3,"nodeType":"436","messageId":"437","endLine":9,"endColumn":8},{"ruleId":"434","severity":1,"message":"455","line":10,"column":3,"nodeType":"436","messageId":"437","endLine":10,"endColumn":6},{"ruleId":"434","severity":1,"message":"456","line":12,"column":3,"nodeType":"436","messageId":"437","endLine":12,"endColumn":8},{"ruleId":"434","severity":1,"message":"457","line":13,"column":3,"nodeType":"436","messageId":"437","endLine":13,"endColumn":10},{"ruleId":"434","severity":1,"message":"458","line":15,"column":8,"nodeType":"436","messageId":"437","endLine":15,"endColumn":15},{"ruleId":"434","severity":1,"message":"459","line":22,"column":5,"nodeType":"436","messageId":"437","endLine":22,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":171,"column":35,"nodeType":"462","messageId":"463","endLine":171,"endColumn":37},{"ruleId":"464","severity":1,"message":"465","line":470,"column":11,"nodeType":"445","endLine":482,"endColumn":12},{"ruleId":"464","severity":1,"message":"465","line":577,"column":11,"nodeType":"445","endLine":589,"endColumn":12},{"ruleId":"434","severity":1,"message":"470","line":154,"column":12,"nodeType":"436","messageId":"437","endLine":154,"endColumn":18},{"ruleId":"434","severity":1,"message":"471","line":154,"column":20,"nodeType":"436","messageId":"437","endLine":154,"endColumn":29},{"ruleId":"447","severity":1,"message":"448","line":162,"column":8,"nodeType":"449","endLine":162,"endColumn":10,"suggestions":"472"},{"ruleId":"434","severity":1,"message":"466","line":1,"column":17,"nodeType":"436","messageId":"437","endLine":1,"endColumn":25},{"ruleId":"434","severity":1,"message":"451","line":1,"column":27,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"473","line":1,"column":17,"nodeType":"436","messageId":"437","endLine":1,"endColumn":26},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"475","severity":1,"message":"476","line":28,"column":36,"nodeType":"477","messageId":"478","endLine":28,"endColumn":38},{"ruleId":"443","severity":1,"message":"479","line":97,"column":13,"nodeType":"445","endLine":97,"endColumn":109},{"ruleId":"443","severity":1,"message":"479","line":101,"column":13,"nodeType":"445","endLine":101,"endColumn":131},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":81,"column":41,"nodeType":"483","endLine":81,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":91,"column":41,"nodeType":"483","endLine":91,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":102,"column":41,"nodeType":"483","endLine":102,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":112,"column":38,"nodeType":"483","endLine":112,"endColumn":48},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":70,"column":41,"nodeType":"483","endLine":70,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":81,"column":41,"nodeType":"483","endLine":81,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":92,"column":41,"nodeType":"483","endLine":92,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":106,"column":38,"nodeType":"483","endLine":106,"endColumn":48},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":63,"column":41,"nodeType":"483","endLine":63,"endColumn":51},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":73,"column":41,"nodeType":"483","endLine":73,"endColumn":51},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"475","severity":1,"message":"476","line":28,"column":36,"nodeType":"477","messageId":"478","endLine":28,"endColumn":38},{"ruleId":"443","severity":1,"message":"479","line":91,"column":13,"nodeType":"445","endLine":91,"endColumn":108},{"ruleId":"443","severity":1,"message":"479","line":95,"column":13,"nodeType":"445","endLine":95,"endColumn":129},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":66,"column":41,"nodeType":"483","endLine":66,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":75,"column":41,"nodeType":"483","endLine":75,"endColumn":51},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":86,"column":41,"nodeType":"483","endLine":86,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":95,"column":41,"nodeType":"483","endLine":95,"endColumn":51},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":65,"column":41,"nodeType":"483","endLine":65,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":74,"column":41,"nodeType":"483","endLine":74,"endColumn":51},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"475","severity":1,"message":"476","line":28,"column":36,"nodeType":"477","messageId":"478","endLine":28,"endColumn":38},{"ruleId":"481","severity":1,"message":"482","line":42,"column":9,"nodeType":"483","endLine":42,"endColumn":32},{"ruleId":"443","severity":1,"message":"479","line":111,"column":13,"nodeType":"445","endLine":111,"endColumn":132},{"ruleId":"443","severity":1,"message":"479","line":115,"column":13,"nodeType":"445","endLine":115,"endColumn":118},{"ruleId":"443","severity":1,"message":"479","line":119,"column":13,"nodeType":"445","endLine":119,"endColumn":133},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":86,"column":41,"nodeType":"483","endLine":86,"endColumn":51},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":84,"column":41,"nodeType":"483","endLine":84,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":96,"column":41,"nodeType":"483","endLine":96,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":107,"column":41,"nodeType":"483","endLine":107,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":118,"column":38,"nodeType":"483","endLine":118,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":136,"column":38,"nodeType":"483","endLine":136,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":147,"column":41,"nodeType":"483","endLine":147,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":157,"column":38,"nodeType":"483","endLine":157,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":169,"column":38,"nodeType":"483","endLine":169,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":179,"column":41,"nodeType":"483","endLine":179,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":189,"column":38,"nodeType":"483","endLine":189,"endColumn":48},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":65,"column":41,"nodeType":"483","endLine":65,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":77,"column":41,"nodeType":"483","endLine":77,"endColumn":51},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"475","severity":1,"message":"476","line":31,"column":36,"nodeType":"477","messageId":"478","endLine":31,"endColumn":38},{"ruleId":"443","severity":1,"message":"479","line":128,"column":13,"nodeType":"445","endLine":128,"endColumn":110},{"ruleId":"443","severity":1,"message":"479","line":132,"column":13,"nodeType":"445","endLine":132,"endColumn":133},{"ruleId":"443","severity":1,"message":"479","line":136,"column":13,"nodeType":"445","endLine":136,"endColumn":114},{"ruleId":"443","severity":1,"message":"479","line":140,"column":13,"nodeType":"445","endLine":140,"endColumn":116},{"ruleId":"475","severity":1,"message":"484","line":144,"column":30,"nodeType":"477","messageId":"478","endLine":144,"endColumn":32},{"ruleId":"443","severity":1,"message":"479","line":145,"column":13,"nodeType":"445","endLine":145,"endColumn":114},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"481","severity":1,"message":"482","line":84,"column":38,"nodeType":"483","endLine":84,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":102,"column":41,"nodeType":"483","endLine":102,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":113,"column":41,"nodeType":"483","endLine":113,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":128,"column":38,"nodeType":"483","endLine":128,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":142,"column":41,"nodeType":"483","endLine":142,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":152,"column":38,"nodeType":"483","endLine":152,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":164,"column":38,"nodeType":"483","endLine":164,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":174,"column":41,"nodeType":"483","endLine":174,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":185,"column":38,"nodeType":"483","endLine":185,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":202,"column":38,"nodeType":"483","endLine":202,"endColumn":48},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"434","severity":1,"message":"485","line":6,"column":8,"nodeType":"436","messageId":"437","endLine":6,"endColumn":18},{"ruleId":"475","severity":1,"message":"476","line":25,"column":36,"nodeType":"477","messageId":"478","endLine":25,"endColumn":38},{"ruleId":"434","severity":1,"message":"466","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"480","line":2,"column":28,"nodeType":"436","messageId":"437","endLine":2,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"475","severity":1,"message":"476","line":33,"column":41,"nodeType":"477","messageId":"478","endLine":33,"endColumn":43},{"ruleId":"481","severity":1,"message":"482","line":68,"column":41,"nodeType":"483","endLine":68,"endColumn":51},{"ruleId":"481","severity":1,"message":"482","line":80,"column":38,"nodeType":"483","endLine":80,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":93,"column":41,"nodeType":"483","endLine":93,"endColumn":51},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"434","severity":1,"message":"485","line":9,"column":8,"nodeType":"436","messageId":"437","endLine":9,"endColumn":18},{"ruleId":"434","severity":1,"message":"486","line":10,"column":10,"nodeType":"436","messageId":"437","endLine":10,"endColumn":16},{"ruleId":"475","severity":1,"message":"476","line":32,"column":36,"nodeType":"477","messageId":"478","endLine":32,"endColumn":38},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"434","severity":1,"message":"487","line":37,"column":11,"nodeType":"436","messageId":"437","endLine":37,"endColumn":17},{"ruleId":"475","severity":1,"message":"476","line":37,"column":41,"nodeType":"477","messageId":"478","endLine":37,"endColumn":43},{"ruleId":"434","severity":1,"message":"488","line":90,"column":9,"nodeType":"436","messageId":"437","endLine":90,"endColumn":16},{"ruleId":"475","severity":1,"message":"476","line":173,"column":53,"nodeType":"477","messageId":"478","endLine":173,"endColumn":55},{"ruleId":"475","severity":1,"message":"476","line":177,"column":53,"nodeType":"477","messageId":"478","endLine":177,"endColumn":55},{"ruleId":"475","severity":1,"message":"476","line":48,"column":15,"nodeType":"477","messageId":"478","endLine":48,"endColumn":17},{"ruleId":"475","severity":1,"message":"476","line":66,"column":15,"nodeType":"477","messageId":"478","endLine":66,"endColumn":17},{"ruleId":"460","severity":1,"message":"461","line":77,"column":44,"nodeType":"462","messageId":"463","endLine":77,"endColumn":46},{"ruleId":"443","severity":1,"message":"479","line":131,"column":17,"nodeType":"445","endLine":138,"endColumn":18},{"ruleId":"475","severity":1,"message":"476","line":133,"column":46,"nodeType":"477","messageId":"478","endLine":133,"endColumn":48},{"ruleId":"443","severity":1,"message":"479","line":141,"column":17,"nodeType":"445","endLine":148,"endColumn":18},{"ruleId":"475","severity":1,"message":"476","line":143,"column":46,"nodeType":"477","messageId":"478","endLine":143,"endColumn":48},{"ruleId":"443","severity":1,"message":"479","line":151,"column":17,"nodeType":"445","endLine":158,"endColumn":18},{"ruleId":"475","severity":1,"message":"476","line":153,"column":46,"nodeType":"477","messageId":"478","endLine":153,"endColumn":48},{"ruleId":"443","severity":1,"message":"479","line":161,"column":17,"nodeType":"445","endLine":168,"endColumn":18},{"ruleId":"475","severity":1,"message":"476","line":163,"column":46,"nodeType":"477","messageId":"478","endLine":163,"endColumn":48},{"ruleId":"443","severity":1,"message":"479","line":171,"column":17,"nodeType":"445","endLine":178,"endColumn":18},{"ruleId":"475","severity":1,"message":"476","line":173,"column":46,"nodeType":"477","messageId":"478","endLine":173,"endColumn":48},{"ruleId":"443","severity":1,"message":"479","line":181,"column":17,"nodeType":"445","endLine":188,"endColumn":18},{"ruleId":"475","severity":1,"message":"476","line":183,"column":46,"nodeType":"477","messageId":"478","endLine":183,"endColumn":48},{"ruleId":"443","severity":1,"message":"479","line":191,"column":17,"nodeType":"445","endLine":198,"endColumn":18},{"ruleId":"475","severity":1,"message":"476","line":193,"column":46,"nodeType":"477","messageId":"478","endLine":193,"endColumn":48},{"ruleId":"434","severity":1,"message":"489","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":36},{"ruleId":"434","severity":1,"message":"454","line":6,"column":3,"nodeType":"436","messageId":"437","endLine":6,"endColumn":8},{"ruleId":"434","severity":1,"message":"490","line":13,"column":8,"nodeType":"436","messageId":"437","endLine":13,"endColumn":13},{"ruleId":"434","severity":1,"message":"491","line":14,"column":8,"nodeType":"436","messageId":"437","endLine":14,"endColumn":22},{"ruleId":"434","severity":1,"message":"492","line":69,"column":11,"nodeType":"436","messageId":"437","endLine":69,"endColumn":19},{"ruleId":"434","severity":1,"message":"492","line":139,"column":13,"nodeType":"436","messageId":"437","endLine":139,"endColumn":21},{"ruleId":"460","severity":1,"message":"461","line":146,"column":37,"nodeType":"462","messageId":"463","endLine":146,"endColumn":39},{"ruleId":"434","severity":1,"message":"474","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":24},{"ruleId":"475","severity":1,"message":"476","line":25,"column":34,"nodeType":"477","messageId":"478","endLine":25,"endColumn":36},{"ruleId":"481","severity":1,"message":"482","line":45,"column":9,"nodeType":"483","endLine":45,"endColumn":32},{"ruleId":"443","severity":1,"message":"479","line":115,"column":25,"nodeType":"445","endLine":121,"endColumn":26},{"ruleId":"443","severity":1,"message":"479","line":125,"column":25,"nodeType":"445","endLine":131,"endColumn":26},{"ruleId":"443","severity":1,"message":"479","line":135,"column":25,"nodeType":"445","endLine":141,"endColumn":26},{"ruleId":"493","severity":1,"message":"494","line":3,"column":15,"nodeType":"495","messageId":"496","endLine":3,"endColumn":27},{"ruleId":"493","severity":1,"message":"494","line":4,"column":15,"nodeType":"495","messageId":"496","endLine":4,"endColumn":27},{"ruleId":"493","severity":1,"message":"494","line":5,"column":15,"nodeType":"495","messageId":"496","endLine":5,"endColumn":27},{"ruleId":"493","severity":1,"message":"494","line":6,"column":15,"nodeType":"495","messageId":"496","endLine":6,"endColumn":27},{"ruleId":"493","severity":1,"message":"494","line":7,"column":15,"nodeType":"495","messageId":"496","endLine":7,"endColumn":27},{"ruleId":"493","severity":1,"message":"494","line":8,"column":15,"nodeType":"495","messageId":"496","endLine":8,"endColumn":27},{"ruleId":"434","severity":1,"message":"497","line":1,"column":28,"nodeType":"436","messageId":"437","endLine":1,"endColumn":34},{"ruleId":"434","severity":1,"message":"485","line":3,"column":8,"nodeType":"436","messageId":"437","endLine":3,"endColumn":18},{"ruleId":"434","severity":1,"message":"498","line":4,"column":10,"nodeType":"436","messageId":"437","endLine":4,"endColumn":16},{"ruleId":"434","severity":1,"message":"499","line":4,"column":18,"nodeType":"436","messageId":"437","endLine":4,"endColumn":23},{"ruleId":"434","severity":1,"message":"500","line":7,"column":3,"nodeType":"436","messageId":"437","endLine":7,"endColumn":7},{"ruleId":"434","severity":1,"message":"453","line":8,"column":3,"nodeType":"436","messageId":"437","endLine":8,"endColumn":9},{"ruleId":"434","severity":1,"message":"501","line":9,"column":3,"nodeType":"436","messageId":"437","endLine":9,"endColumn":12},{"ruleId":"434","severity":1,"message":"502","line":10,"column":3,"nodeType":"436","messageId":"437","endLine":10,"endColumn":14},{"ruleId":"434","severity":1,"message":"503","line":11,"column":3,"nodeType":"436","messageId":"437","endLine":11,"endColumn":15},{"ruleId":"434","severity":1,"message":"504","line":14,"column":8,"nodeType":"436","messageId":"437","endLine":14,"endColumn":16},{"ruleId":"460","severity":1,"message":"461","line":138,"column":37,"nodeType":"462","messageId":"463","endLine":138,"endColumn":39},{"ruleId":"443","severity":1,"message":"479","line":152,"column":9,"nodeType":"445","endLine":152,"endColumn":79},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'onTokenExpire' is defined but never used.","no-native-reassign",["505"],"no-negated-in-lhs",["506"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requests'. Either include it or remove the dependency array.","ArrayExpression",["507"],"'useEffect' is defined but never used.","'Jumbotron' is defined but never used.","'Button' is defined but never used.","'Table' is defined but never used.","'Col' is defined but never used.","'Modal' is defined but never used.","'Tooltip' is defined but never used.","'Overlay' is defined but never used.","'token' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","'useState' is defined but never used.","'Card' is defined but never used.","'handleClick' is assigned a value but never used.","'renderTooltip' is assigned a value but never used.","'addReq' is assigned a value but never used.","'setAddReq' is assigned a value but never used.",["508"],"'Component' is defined but never used.","'ToastContainer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'InputGroup' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Expected '!==' and instead saw '!='.","'getHistory' is defined but never used.","'render' is defined but never used.","'params' is assigned a value but never used.","'resData' is assigned a value but never used.","'setState' is defined but never used.","'faker' is defined but never used.","'SmartDataTable' is defined but never used.","'response' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'useRef' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'ControlLabel' is defined but never used.","'Schedule' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"509","fix":"510"},{"desc":"509","fix":"511"},"Update the dependencies array to be: [requests]",{"range":"512","text":"513"},{"range":"514","text":"513"},[5717,5719],"[requests]",[6488,6490]]